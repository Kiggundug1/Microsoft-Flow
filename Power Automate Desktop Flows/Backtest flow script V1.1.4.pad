<UPDATED_CODE># Initialize variables with enhanced error handling
TRY
    SET mt5Path TO "C:\Program Files\MetaTrader 5 EXNESS\terminal64.exe"
    SET eaPath TO "C:\Users\kigundu\AppData\Roaming\MetaQuotes\Terminal\53785E099C927DB68A545C249CDBCE06\MQL5\Experts\Custom EAs\Moving Average"
    SET reportPath TO "D:\FOREX\FOREX DOCUMENTS\MT5 STRATEGY TESTER REPORTS\Reports"
    SET startDate TO "2019.01.01"
    SET endDate TO "2024.12.31"
    SET reportCounter TO 1
    SET maxWaitTimeForTest TO 180  # Maximum wait time for test completion (3 minutes)
    SET initialLoadTime TO 15      # Initial load time for MT5
    SET maxRetries TO 3            # Maximum number of retries for operations
    SET skipOnError TO true        # Skip to next item on error instead of stopping
    SET autoRestartOnFailure TO true  # Auto restart MT5 on consecutive failures
    SET maxConsecutiveFailures TO 5   # Number of failures before restart
    SET consecutiveFailures TO 0      # Counter for consecutive failures
    
    # Adaptive waiting parameters
    SET adaptiveWaitEnabled TO true     # Enable adaptive waiting times
    SET baseWaitMultiplier TO 1.0       # Base multiplier for wait times (increase for slower systems)
    SET maxAdaptiveWaitMultiplier TO 5  # Maximum multiplier for adaptive waits
    SET currentAdaptiveMultiplier TO 1.0 # Current adaptive multiplier (will adjust dynamically)
    SET systemLoadCheckInterval TO 300   # Check system load every 5 minutes
    SET lastSystemLoadCheck TO 0         # Time tracker for system load checks
    SET lowMemoryThreshold TO 200        # Low memory threshold in MB
    SET availableMemory TO 1000          # Initial value, will be updated
    
    # Logging optimization settings
    SET verboseLogging TO false        # Set to true for detailed logs, false for minimal logs
    SET logProgressInterval TO 10      # Log progress every X percent (higher = fewer logs)
    SET detailedSystemCheckInterval TO 600  # Check system details every X seconds (higher = less overhead)
    
    # Create log file for tracking progress and errors
    SET logFilePath TO "D:\FOREX\FOREX DOCUMENTS\MT5 STRATEGY TESTER REPORTS\automation_log.txt"
    
    # Error screenshots path
    SET errorScreenshotsPath TO "%reportPath%\errors"
    
    # Checkpoint file for resume functionality
    SET checkpointFile TO "%reportPath%\checkpoint.json"
    SET eaIndex TO 0
    SET currencyIndex TO 0
    SET timeframeIndex TO 0
    SET resumeFromCheckpoint TO false
    
    # Configuration file path
    SET configFilePath TO "%reportPath%\backtest_config.txt"
    
    # Check if paths exist
    IF FOLDER NOT EXISTS "%mt5Path%"
        THROW "MetaTrader 5 path does not exist: %mt5Path%"
    END IF
    
    IF FOLDER NOT EXISTS "%eaPath%"
        THROW "EA path does not exist: %eaPath%"
    END IF
    
    IF FOLDER NOT EXISTS "%reportPath%"
        # Create reports folder if it doesn't exist
        CREATE FOLDER "%reportPath%"
    END IF
    
    IF FOLDER NOT EXISTS "%errorScreenshotsPath%"
        CREATE FOLDER "%errorScreenshotsPath%"
    END IF
    
    # Log start of execution
    APPEND TEXT "Started execution at %CURRENT DATE% %CURRENT TIME%\r\n" TO FILE "%logFilePath%"
    APPEND TEXT "Using MT5 path: %mt5Path%\r\n" TO FILE "%logFilePath%"
    APPEND TEXT "Using EA path: %eaPath%\r\n" TO FILE "%logFilePath%"
CATCH
    DISPLAY MESSAGE "Error during initialization: %ERROR MESSAGE%"
    
    # Log error and continue if possible
    APPEND TEXT "Error during initialization: %ERROR MESSAGE%\r\n" TO FILE "%logFilePath%"
    
    IF %skipOnError%
        APPEND TEXT "Continuing despite initialization error...\r\n" TO FILE "%logFilePath%"
    ELSE
        EXIT FLOW
    END IF
END TRY

# Function to verify and set a value only if needed
FUNCTION VerifyAndSetValue
    PARAMETERS fieldName currentValue targetValue
    
    IF "%currentValue%" != "%targetValue%"
        APPEND TEXT "Changing %fieldName% from '%currentValue%' to '%targetValue%'\r\n" TO FILE "%logFilePath%"
        RETURN false  # Value needs to be set
    ELSE
        APPEND TEXT "%fieldName% already set to '%targetValue%', skipping\r\n" TO FILE "%logFilePath%"
        RETURN true  # Value already correct
    END IF
END FUNCTION

# Function to load configuration
FUNCTION LoadConfiguration
    IF FILE EXISTS "%configFilePath%"
        TRY
            APPEND TEXT "Loading configuration from %configFilePath%\r\n" TO FILE "%logFilePath%"
            READ FILE "%configFilePath%" STORE RESULT IN configData
            
            # Parse config data line by line
            SPLIT TEXT "%configData%" BY "\r\n" STORE RESULT IN configLines
            
            FOR EACH configLine IN %configLines%
                # Skip empty lines and comments
                IF "%configLine%" = "" OR STARTS WITH "%configLine%" "#"
                    CONTINUE
                END IF
                
                # Extract key and value
                SPLIT TEXT "%configLine%" BY "=" STORE RESULT IN keyValue
                IF COUNT OF LIST keyValue = 2
                    SET configKey TO ITEM 1 FROM LIST keyValue
                    SET configValue TO ITEM 2 FROM LIST keyValue
                    
                    # Trim whitespace
                    SET configKey TO TRIM "%configKey%"
                    SET configValue TO TRIM "%configValue%"
                    
                    # Apply configuration based on key
                    IF "%configKey%" = "mt5Path"
                        SET mt5Path TO "%configValue%"
                    ELSIF "%configKey%" = "eaPath"
                        SET eaPath TO "%configValue%"
                    ELSIF "%configKey%" = "reportPath"
                        SET reportPath TO "%configValue%"
                    ELSIF "%configKey%" = "startDate"
                        SET startDate TO "%configValue%"
                    ELSIF "%configKey%" = "endDate"
                        SET endDate TO "%configValue%"
                    ELSIF "%configKey%" = "maxWaitTimeForTest"
                        SET maxWaitTimeForTest TO %configValue%
                    ELSIF "%configKey%" = "initialLoadTime"
                        SET initialLoadTime TO %configValue%
                    ELSIF "%configKey%" = "maxRetries"
                        SET maxRetries TO %configValue%
                    ELSIF "%configKey%" = "skipOnError"
                        SET skipOnError TO %configValue%
                    ELSIF "%configKey%" = "autoRestartOnFailure"
                        SET autoRestartOnFailure TO %configValue%
                    ELSIF "%configKey%" = "maxConsecutiveFailures"
                        SET maxConsecutiveFailures TO %configValue%
                    ELSIF "%configKey%" = "adaptiveWaitEnabled"
                        SET adaptiveWaitEnabled TO %configValue%
                    ELSIF "%configKey%" = "baseWaitMultiplier"
                        SET baseWaitMultiplier TO %configValue%
                    ELSIF "%configKey%" = "maxAdaptiveWaitMultiplier"
                        SET maxAdaptiveWaitMultiplier TO %configValue%
                    ELSIF "%configKey%" = "systemLoadCheckInterval"
                        SET systemLoadCheckInterval TO %configValue%
                    ELSIF "%configKey%" = "lowMemoryThreshold"
                        SET lowMemoryThreshold TO %configValue%
                    END IF
                    
                    APPEND TEXT "Config: %configKey% = %configValue%\r\n" TO FILE "%logFilePath%"
                END IF
            END FOR
            
            APPEND TEXT "Configuration loaded successfully\r\n" TO FILE "%logFilePath%"
        CATCH
            APPEND TEXT "Error loading configuration: %ERROR MESSAGE%. Using default settings.\r\n" TO FILE "%logFilePath%"
        END TRY
    ELSE
        APPEND TEXT "No configuration file found at %configFilePath%. Using default settings.\r\n" TO FILE "%logFilePath%"
    END IF
END FUNCTION

# Define adaptive wait function
FUNCTION AdaptiveWait
    PARAMETERS waitTime
    
    IF %adaptiveWaitEnabled%
        SET adjustedWaitTime TO %waitTime% * %currentAdaptiveMultiplier%
        WAIT %adjustedWaitTime%
    ELSE
        WAIT %waitTime%
    END IF
END FUNCTION

# Function to capture error state with screenshots
FUNCTION CaptureErrorState
    PARAMETERS errorContext
    
    TRY
        # Format timestamp for filename
        SET timestamp TO REPLACE ":" WITH "-" IN "%CURRENT TIME%"
        SET timestamp TO REPLACE " " WITH "_" IN "%timestamp%"
        SET timestamp TO REPLACE "/" WITH "-" IN "%CURRENT DATE%_%timestamp%"
        
        # Take screenshot of error state
        CAPTURE SCREENSHOT "%errorScreenshotsPath%\error_%errorContext%_%timestamp%.png"
        APPEND TEXT "Error screenshot saved: error_%errorContext%_%timestamp%.png\r\n" TO FILE "%logFilePath%"
        
        # Try to save any partial results if in Strategy Tester
        IF WINDOW "Strategy Tester" EXISTS
            SEND KEYS Ctrl+s WINDOW "Strategy Tester"
            CALL AdaptiveWait WITH PARAMETERS 2
            
            # Set partial results filename
            SET partialFileName TO "partial_%errorContext%_%timestamp%"
            SEND KEYS "%reportPath%\%partialFileName%" WINDOW "Save As"
            CALL AdaptiveWait WITH PARAMETERS 1
            SEND KEYS Enter WINDOW "Save As"
            CALL AdaptiveWait WITH PARAMETERS 2
            
            APPEND TEXT "Partial results saved: %partialFileName%\r\n" TO FILE "%logFilePath%"
        END IF
    CATCH
        APPEND TEXT "Failed to capture error state: %ERROR MESSAGE%\r\n" TO FILE "%logFilePath%"
    END TRY
END FUNCTION

# Function to save checkpoint
FUNCTION SaveCheckpoint
    TRY
        # Create checkpoint data
        SET checkpointData TO "{"
        SET checkpointData TO "%checkpointData%\"eaIndex\": %eaIndex%, "
        SET checkpointData TO "%checkpointData%\"currencyIndex\": %currencyIndex%, "
        SET checkpointData TO "%checkpointData%\"timeframeIndex\": %timeframeIndex%, "
        SET checkpointData TO "%checkpointData%\"eaName\": \"%eaName%\", "
        SET checkpointData TO "%checkpointData%\"currency\": \"%currency%\", "
        SET checkpointData TO "%checkpointData%\"timeframe\": \"%timeframe%\", "
        SET checkpointData TO "%checkpointData%\"reportCounter\": %reportCounter%"
        SET checkpointData TO "%checkpointData%}"
        
        # Write checkpoint data to file
        WRITE TEXT "%checkpointData%" TO FILE "%checkpointFile%"
        APPEND TEXT "Checkpoint saved: EA=%eaName%, Currency=%currency%, Timeframe=%timeframe%\r\n" TO FILE "%logFilePath%"
    CATCH
        APPEND TEXT "Failed to save checkpoint: %ERROR MESSAGE%\r\n" TO FILE "%logFilePath%"
    END TRY
END FUNCTION

# Function to perform memory cleanup
FUNCTION PerformMemoryCleanup
    # Only perform cleanup when memory is critically low
    IF %availableMemory% < (%lowMemoryThreshold% / 2)
        APPEND TEXT "Performing memory cleanup due to low memory (%availableMemory% MB)...\r\n" TO FILE "%logFilePath%"
        
        # Attempt to free memory by restarting Explorer (lightweight cleanup)
        TRY
            KILL PROCESS "explorer.exe" WAIT FOR COMPLETION Yes
            CALL AdaptiveWait WITH PARAMETERS 3
            RUN PROGRAM "explorer.exe" WAIT FOR COMPLETION No
            CALL AdaptiveWait WITH PARAMETERS 5
            
            # Check if cleanup helped
            GET SYSTEM AVAILABLE MEMORY IN MB STORE RESULT IN newAvailableMemory
            APPEND TEXT "Memory after cleanup: %newAvailableMemory% MB (was %availableMemory% MB)\r\n" TO FILE "%logFilePath%"
            SET availableMemory TO %newAvailableMemory%
        CATCH
            APPEND TEXT "Memory cleanup attempt failed: %ERROR MESSAGE%\r\n" TO FILE "%logFilePath%"
        END TRY
    END IF
END FUNCTION

# Enhanced system resource check function - optimized for long runs
FUNCTION DetailedSystemCheck
    # Get current time
    SET currentTime TO %CURRENT TIME IN SECONDS%
    
    # Only check periodically to avoid overhead
    IF %currentTime% - %lastSystemLoadCheck% >= %detailedSystemCheckInterval%
        SET lastSystemLoadCheck TO %currentTime%
        
        # Get available memory
        GET SYSTEM AVAILABLE MEMORY IN MB STORE RESULT IN availableMemory
        
        # Only get CPU usage if memory is concerning (reduces overhead)
        IF %availableMemory% < %lowMemoryThreshold% * 2
            TRY
                GET CPU USAGE PERCENTAGE STORE RESULT IN cpuUsage
            CATCH
                SET cpuUsage TO 50  # Default value if can't get actual CPU usage
            END TRY
        ELSE
            # Assume moderate CPU usage if memory is plentiful
            SET cpuUsage TO 50
        END IF
        
        # Only log if verbose logging is enabled or if system is under stress
        IF %verboseLogging% OR %availableMemory% < %lowMemoryThreshold% * 2 OR %cpuUsage% > 80
            APPEND TEXT "System check: CPU: %cpuUsage%%, Memory: %availableMemory% MB\r\n" TO FILE "%logFilePath%"
        END IF
        
        # Adjust wait multiplier based on system metrics
        IF %cpuUsage% > 90 OR %availableMemory% < %lowMemoryThreshold%
            # Critical system load - maximum wait times
            SET currentAdaptiveMultiplier TO %maxAdaptiveWaitMultiplier%
            APPEND TEXT "Critical system load detected. Increasing wait times to maximum.\r\n" TO FILE "%logFilePath%"
            
            # Check if we need to perform memory cleanup
            CALL PerformMemoryCleanup
        ELSIF %cpuUsage% > 70 OR %availableMemory% < %lowMemoryThreshold% * 2
            # High system load - increase wait times
            SET currentAdaptiveMultiplier TO MIN(%maxAdaptiveWaitMultiplier%, %currentAdaptiveMultiplier% * 1.5)
            
            # Only log if verbose logging is enabled
            IF %verboseLogging%
                APPEND TEXT "High system load detected. Increasing wait multiplier to %currentAdaptiveMultiplier%\r\n" TO FILE "%logFilePath%"
            END IF
        ELSIF %cpuUsage% < 40 AND %availableMemory% > %lowMemoryThreshold% * 3
            # Low system load - decrease wait times
            SET currentAdaptiveMultiplier TO MAX(1.0, %currentAdaptiveMultiplier% * 0.8)
            
            # Only log if verbose logging is enabled
            IF %verboseLogging%
                APPEND TEXT "Low system load detected. Decreasing wait multiplier to %currentAdaptiveMultiplier%\r\n" TO FILE "%logFilePath%"
            END IF
        ELSE
            # Moderate system load - gradually normalize wait times
            SET currentAdaptiveMultiplier TO MAX(1.0, %currentAdaptiveMultiplier% * 0.95)
        END IF
    END IF
END FUNCTION

# Function to estimate test duration
FUNCTION EstimateTestDuration
    PARAMETERS currency timeframe
    
        # Base estimates on timeframe (in seconds)
    IF "%timeframe%" = "M1"
        SET baseDuration TO 300  # 5 minutes
    ELSIF "%timeframe%" = "M5"
        SET baseDuration TO 240  # 4 minutes
    ELSIF "%timeframe%" = "M15"
        SET baseDuration TO 180  # 3 minutes
        ELSIF "%timeframe%" = "M30"
        SET baseDuration TO 150  # 2.5 minutes
    ELSIF "%timeframe%" = "H1"
        SET baseDuration TO 120  # 2 minutes
    ELSIF "%timeframe%" = "H4"
        SET baseDuration TO 90   # 1.5 minutes
    ELSIF "%timeframe%" = "D1"
        SET baseDuration TO 60   # 1 minute
    ELSE
        SET baseDuration TO 180  # 3 minutes default
    END IF
    
    # Adjust for currency pair complexity (some pairs take longer)
    IF "%currency%" = "EURUSD" OR "%currency%" = "GBPUSD" OR "%currency%" = "USDJPY"
        # Major pairs typically have more data and take longer
        SET currencyMultiplier TO 1.2
    ELSIF CONTAINS "%currency%" "JPY" OR CONTAINS "%currency%" "CHF"
        # Cross pairs with JPY or CHF often take longer
        SET currencyMultiplier TO 1.1
    ELSE
        SET currencyMultiplier TO 1.0
    END IF
    
    # Adjust for date range
    # Calculate approximate number of years in test
    SET startYear TO EXTRACT REGEX "(\d{4})" FROM "%startDate%"
    SET endYear TO EXTRACT REGEX "(\d{4})" FROM "%endDate%"
    SET yearDifference TO %endYear% - %startYear% + 1
    SET dateRangeMultiplier TO MAX(1.0, %yearDifference% / 3)  # Normalize to 3 years as baseline
    
    # Calculate final estimate
    SET estimatedDuration TO %baseDuration% * %currencyMultiplier% * %dateRangeMultiplier%
    
    # Apply system load factor
    SET estimatedDuration TO %estimatedDuration% * %currentAdaptiveMultiplier%
    
    # Round to nearest 10 seconds
    SET estimatedDuration TO ROUND(%estimatedDuration% / 10) * 10
    
    RETURN %estimatedDuration%
END FUNCTION

# Define timeframes - updated to include all 21 MT5 timeframes
CREATE LIST timeframes
# Minute timeframes
ADD ITEM "M1" TO LIST timeframes
ADD ITEM "M2" TO LIST timeframes
ADD ITEM "M3" TO LIST timeframes
ADD ITEM "M4" TO LIST timeframes
ADD ITEM "M5" TO LIST timeframes
ADD ITEM "M6" TO LIST timeframes
ADD ITEM "M10" TO LIST timeframes
ADD ITEM "M12" TO LIST timeframes
ADD ITEM "M15" TO LIST timeframes
ADD ITEM "M20" TO LIST timeframes
ADD ITEM "M30" TO LIST timeframes
# Hour timeframes
ADD ITEM "H1" TO LIST timeframes
ADD ITEM "H2" TO LIST timeframes
ADD ITEM "H3" TO LIST timeframes
ADD ITEM "H4" TO LIST timeframes
ADD ITEM "H6" TO LIST timeframes
ADD ITEM "H8" TO LIST timeframes
ADD ITEM "H12" TO LIST timeframes
# Day and above timeframes
ADD ITEM "D1" TO LIST timeframes
ADD ITEM "W1" TO LIST timeframes
ADD ITEM "MN1" TO LIST timeframes

# Define currency pairs - full set for comprehensive testing
CREATE LIST currencies
# Majors
ADD ITEM "EURUSD" TO LIST currencies
ADD ITEM "GBPUSD" TO LIST currencies
ADD ITEM "USDJPY" TO LIST currencies
ADD ITEM "USDCHF" TO LIST currencies
ADD ITEM "AUDUSD" TO LIST currencies
ADD ITEM "USDCAD" TO LIST currencies
ADD ITEM "NZDUSD" TO LIST currencies
# Cross pairs
ADD ITEM "EURGBP" TO LIST currencies
ADD ITEM "EURJPY" TO LIST currencies
ADD ITEM "GBPJPY" TO LIST currencies
ADD ITEM "AUDJPY" TO LIST currencies
ADD ITEM "CADJPY" TO LIST currencies
ADD ITEM "CHFJPY" TO LIST currencies
# Exotics
ADD ITEM "EURTRY" TO LIST currencies
ADD ITEM "USDZAR" TO LIST currencies
ADD ITEM "USDMXN" TO LIST currencies
ADD ITEM "USDSEK" TO LIST currencies
ADD ITEM "USDNOK" TO LIST currencies

# Get list of all EAs in the folder
CREATE LIST eaList
TRY
    # Get all EA files in the directory
    GET FILES IN FOLDER "%eaPath%" WITH PATTERN "*.ex5" RECURSIVE No STORE RESULT IN eaList
    
    # If no EAs found, add a default one to prevent errors
    IF COUNT OF LIST eaList = 0
        ADD ITEM "Moving Average" TO LIST eaList
        APPEND TEXT "No EA files found in %eaPath%, using default 'Moving Average'\r\n" TO FILE "%logFilePath%"
    ELSE
        APPEND TEXT "Found %COUNT OF LIST eaList% EA files in %eaPath%\r\n" TO FILE "%logFilePath%"
        
        # Log all found EAs
        FOR EACH eaFile IN %eaList%
            # Extract just the EA name without path and extension
            SET eaName TO EXTRACT FILENAME FROM PATH "%eaFile%"
            SET eaName TO REPLACE ".ex5" WITH "" IN "%eaName%"
            APPEND TEXT "Found EA: %eaName%\r\n" TO FILE "%logFilePath%"
        END FOR
    END IF
CATCH
    APPEND TEXT "Error getting EA list: %ERROR MESSAGE%. Using default EA.\r\n" TO FILE "%logFilePath%"
    # Add default EA to prevent errors
    ADD ITEM "Moving Average" TO LIST eaList
END TRY

# Load configuration if available
CALL LoadConfiguration

# Check for checkpoint file to resume from previous run
IF FILE EXISTS "%checkpointFile%"
    TRY
        READ FILE "%checkpointFile%" STORE RESULT IN checkpointData
        APPEND TEXT "Found checkpoint file. Attempting to resume from last position...\r\n" TO FILE "%logFilePath%"
        
        # Extract values from checkpoint data using regex
        SET eaIndex TO EXTRACT REGEX "\"eaIndex\":\s*(\d+)" FROM "%checkpointData%"
        SET currencyIndex TO EXTRACT REGEX "\"currencyIndex\":\s*(\d+)" FROM "%checkpointData%"
        SET timeframeIndex TO EXTRACT REGEX "\"timeframeIndex\":\s*(\d+)" FROM "%checkpointData%"
        SET checkpointEaName TO EXTRACT REGEX "\"eaName\":\s*\"([^\"]+)\"" FROM "%checkpointData%"
        SET checkpointCurrency TO EXTRACT REGEX "\"currency\":\s*\"([^\"]+)\"" FROM "%checkpointData%"
        SET checkpointTimeframe TO EXTRACT REGEX "\"timeframe\":\s*\"([^\"]+)\"" FROM "%checkpointData%"
        SET reportCounter TO EXTRACT REGEX "\"reportCounter\":\s*(\d+)" FROM "%checkpointData%"
        
        SET resumeFromCheckpoint TO true
        APPEND TEXT "Resuming from: EA=%checkpointEaName% (%eaIndex%), Currency=%checkpointCurrency% (%currencyIndex%), Timeframe=%checkpointTimeframe% (%timeframeIndex%)\r\n" TO FILE "%logFilePath%"
    CATCH
        APPEND TEXT "Failed to parse checkpoint file: %ERROR MESSAGE%. Starting from beginning.\r\n" TO FILE "%logFilePath%"
        SET resumeFromCheckpoint TO false
    END TRY
END IF

# Initial system resource check
CALL DetailedSystemCheck

# Launch MT5 with error handling and retry mechanism
SET retryCount TO 0
WHILE %retryCount% < %maxRetries%
    TRY
        APPEND TEXT "Launching MetaTrader 5 (attempt %retryCount% + 1)...\r\n" TO FILE "%logFilePath%"
        RUN PROGRAM "%mt5Path%" WAIT FOR COMPLETION No
        
        # Wait for MT5 to fully load with verification
        CALL AdaptiveWait WITH PARAMETERS %initialLoadTime%
        
        # Check if MT5 is running
        IF WINDOW "MetaTrader 5" NOT EXISTS
            THROW "MetaTrader 5 did not start properly"
        END IF
        
        APPEND TEXT "MetaTrader 5 launched successfully\r\n" TO FILE "%logFilePath%"
        
        # After MT5 is launched successfully, optimize it for backtesting
        CALL OptimizeMT5ForBacktesting
        
        # Configure MT5 to use unlimited bars in chart
        TRY
            APPEND TEXT "Configuring MT5 to use unlimited bars in chart...\r\n" TO FILE "%logFilePath%"
            
            # Open MT5 settings dialog
            SEND KEYS Alt+o WINDOW "MetaTrader 5"
            CALL AdaptiveWait WITH PARAMETERS 2
            
            # Navigate to Charts tab (typically the 2nd tab)
            SEND KEYS Tab WINDOW "Settings"
            CALL AdaptiveWait WITH PARAMETERS 1
            SEND KEYS Right WINDOW "Settings"
            CALL AdaptiveWait WITH PARAMETERS 1
            
            # Navigate to "Max bars in chart" field
            # The exact number of tabs needed may vary based on MT5 version
            # Typically need to tab multiple times to reach this field
            SEND KEYS Tab Tab Tab Tab Tab Tab Tab Tab WINDOW "Settings"
            CALL AdaptiveWait WITH PARAMETERS 1
            
            # Select all text in the field and replace with "0" (unlimited)
            SEND KEYS Ctrl+a WINDOW "Settings"
            CALL AdaptiveWait WITH PARAMETERS 1
            SEND KEYS "0" WINDOW "Settings"
            CALL AdaptiveWait WITH PARAMETERS 1
            
            # Navigate to OK button and click it
            SEND KEYS Tab Tab Tab Tab Tab Tab Tab Tab Tab WINDOW "Settings"
            CALL AdaptiveWait WITH PARAMETERS 1
            SEND KEYS Enter WINDOW "Settings"
            CALL AdaptiveWait WITH PARAMETERS 2
            
            APPEND TEXT "Successfully set maximum bars in chart to unlimited\r\n" TO FILE "%logFilePath%"
        CATCH
            APPEND TEXT "Warning: Could not set maximum bars in chart to unlimited: %ERROR MESSAGE%\r\n" TO FILE "%logFilePath%"
            
            # Try alternative method if first method fails
            TRY
                # Alternative method using more direct keyboard navigation
                SEND KEYS Alt WINDOW "MetaTrader 5"
                CALL AdaptiveWait WITH PARAMETERS 1
                SEND KEYS t WINDOW "MetaTrader 5"  # Tools menu
                CALL AdaptiveWait WITH PARAMETERS 1
                SEND KEYS o WINDOW "MetaTrader 5"  # Options
                CALL AdaptiveWait WITH PARAMETERS 2
                
                # Navigate to Charts tab
                SEND KEYS Right WINDOW "Settings"
                CALL AdaptiveWait WITH PARAMETERS 1
                
                # Try to find the Max bars field by typing its name
                SEND KEYS "Max bars" WINDOW "Settings"
                CALL AdaptiveWait WITH PARAMETERS 1
                SEND KEYS Tab WINDOW "Settings"
                CALL AdaptiveWait WITH PARAMETERS 1
                
                # Enter 0 for unlimited
                SEND KEYS "0" WINDOW "Settings"
                CALL AdaptiveWait WITH PARAMETERS 1
                
                # Press OK
                SEND KEYS Alt+o WINDOW "Settings"
                CALL AdaptiveWait WITH PARAMETERS 2
                
                APPEND TEXT "Successfully set maximum bars in chart to unlimited using alternative method\r\n" TO FILE "%logFilePath%"
            CATCH
                APPEND TEXT "Failed to set maximum bars in chart to unlimited. Backtests may have limited historical data.\r\n" TO FILE "%logFilePath%"
                # Continue with the script despite this error
            END TRY
        END TRY
        
        BREAK
    CATCH
        SET retryCount TO %retryCount% + 1
        APPEND TEXT "Error launching MetaTrader 5 (attempt %retryCount%): %ERROR MESSAGE%\r\n" TO FILE "%logFilePath%"
        
        # Capture error state
        CALL CaptureErrorState WITH PARAMETERS "MT5Launch"
        
        IF %retryCount% >= %maxRetries%
            IF %skipOnError%
                APPEND TEXT "Maximum retries reached. Continuing with script...\r\n" TO FILE "%logFilePath%"
                BREAK
            ELSE
                DISPLAY MESSAGE "Failed to launch MetaTrader 5 after %maxRetries% attempts"
                EXIT FLOW
            END IF
        ELSE
            # Wait before retrying
            CALL AdaptiveWait WITH PARAMETERS 10
        END IF
    END TRY
END WHILE

# Create templates directory if it doesn't exist
IF FOLDER NOT EXISTS "%reportPath%\templates"
    CREATE FOLDER "%reportPath%\templates"
END IF

# Function to save current Strategy Tester settings
FUNCTION SaveCurrentSettings
    TRY
        # Create a unique template name based on EA and currency
        SET templateName TO "%eaName%_%currency%_settings"
        
        # Save settings as template
        SEND KEYS Alt WINDOW "Strategy Tester"
        CALL AdaptiveWait WITH PARAMETERS 1
        SEND KEYS t WINDOW "Strategy Tester"  # Template menu
        CALL AdaptiveWait WITH PARAMETERS 1
        SEND KEYS s WINDOW "Strategy Tester"  # Save As option
        CALL AdaptiveWait WITH PARAMETERS 2
        
        # Enter template name
        SEND KEYS "%reportPath%\templates\%templateName%" WINDOW "Save As"
        CALL AdaptiveWait WITH PARAMETERS 1
        SEND KEYS Enter WINDOW "Save As"
        CALL AdaptiveWait WITH PARAMETERS 2
        
        # Handle potential overwrite confirmation
        IF WINDOW "Confirm" EXISTS
            SEND KEYS y WINDOW "Confirm"
            CALL AdaptiveWait WITH PARAMETERS 2
        END IF
        
        APPEND TEXT "Settings saved as template: %templateName%\r\n" TO FILE "%logFilePath%"
    CATCH
        APPEND TEXT "Failed to save settings template: %ERROR MESSAGE%\r\n" TO FILE "%logFilePath%"
    END TRY
END FUNCTION

# Function to load saved Strategy Tester settings
FUNCTION LoadSettings
    TRY
        # Use the same template name format as in SaveCurrentSettings
        SET templateName TO "%eaName%_%currency%_settings"
        
        # Load settings from template
        SEND KEYS Alt WINDOW "Strategy Tester"
        CALL AdaptiveWait WITH PARAMETERS 1
        SEND KEYS t WINDOW "Strategy Tester"  # Template menu
        CALL AdaptiveWait WITH PARAMETERS 1
        SEND KEYS l WINDOW "Strategy Tester"  # Load option
        CALL AdaptiveWait WITH PARAMETERS 2
        
        # Navigate to and select the template
        SEND KEYS "%templateName%" WINDOW "Open"
        CALL AdaptiveWait WITH PARAMETERS 1
        SEND KEYS Enter WINDOW "Open"
        CALL AdaptiveWait WITH PARAMETERS 2
        
        APPEND TEXT "Settings loaded from template: %templateName%\r\n" TO FILE "%logFilePath%"
    CATCH
        APPEND TEXT "Failed to load settings template: %ERROR MESSAGE%. Using default settings.\r\n" TO FILE "%logFilePath%"
    END TRY
END FUNCTION

# Function to optimize MT5 settings for backtesting
FUNCTION OptimizeMT5ForBacktesting
    TRY
        APPEND TEXT "Optimizing MT5 settings for backtesting...\r\n" TO FILE "%logFilePath%"
        
        # Disable chart updates during testing
        SEND KEYS Alt+o WINDOW "MetaTrader 5"
        CALL AdaptiveWait WITH PARAMETERS 2
        
        # Navigate to Strategy Tester tab
        SEND KEYS Tab Tab Tab Tab WINDOW "Settings"
        CALL AdaptiveWait WITH PARAMETERS 1
        SEND KEYS Right Right Right WINDOW "Settings"
        CALL AdaptiveWait WITH PARAMETERS 1
        
        # Disable visual mode by default
        SEND KEYS Tab Tab Tab Tab WINDOW "Settings"
        CALL AdaptiveWait WITH PARAMETERS 1
        SEND KEYS Space WINDOW "Settings"
        CALL AdaptiveWait WITH PARAMETERS 1
        
        # Increase max bars in history for more accurate testing
        SEND KEYS Tab Tab WINDOW "Settings"
        CALL AdaptiveWait WITH PARAMETERS 1
        SEND KEYS Ctrl+a WINDOW "Settings"
        CALL AdaptiveWait WITH PARAMETERS 1
        SEND KEYS "0" WINDOW "Settings"  # 0 means unlimited
        CALL AdaptiveWait WITH PARAMETERS 1
        
        # Optimize memory usage settings
        SEND KEYS Tab Tab Tab WINDOW "Settings"
        CALL AdaptiveWait WITH PARAMETERS 1
        SEND KEYS Ctrl+a WINDOW "Settings"
        CALL AdaptiveWait WITH PARAMETERS 1
        SEND KEYS "8192" WINDOW "Settings"  # Increase memory buffer
        CALL AdaptiveWait WITH PARAMETERS 1
        
        # Save settings
        SEND KEYS Alt+o WINDOW "Settings"
        CALL AdaptiveWait WITH PARAMETERS 2
        
        APPEND TEXT "MT5 settings optimized for backtesting\r\n" TO FILE "%logFilePath%"
    CATCH
        APPEND TEXT "Failed to optimize MT5 settings: %ERROR MESSAGE%\r\n" TO FILE "%logFilePath%"
        # Continue despite failure - not critical
    END TRY
END FUNCTION

# Loop through each EA
FOR EACH eaFile IN %eaList% WITH INDEX eaIndex
    # Skip to checkpoint position if resuming
    IF %resumeFromCheckpoint% AND %eaIndex% < %eaIndex%
        CONTINUE
    END IF
    
    # Extract just the EA name without path and extension
    SET eaName TO EXTRACT FILENAME FROM PATH "%eaFile%"
    SET eaName TO REPLACE ".ex5" WITH "" IN "%eaName%"
    
    APPEND TEXT "Starting tests for EA: %eaName%\r\n" TO FILE "%logFilePath%"
    
    # Loop through each currency pair
    FOR EACH currency IN %currencies% WITH INDEX currencyIndex
        # Skip to checkpoint position if resuming
        IF %resumeFromCheckpoint% AND %eaIndex% = %eaIndex% AND %currencyIndex% < %currencyIndex%
            CONTINUE
        END IF
        
        TRY
            APPEND TEXT "Starting tests for EA: %eaName% on %currency%\r\n" TO FILE "%logFilePath%"
            
            # Check system resources before starting a new test
            CALL DetailedSystemCheck
            
            # Open Strategy Tester using hotkey with retry
            SET retryCount TO 0
            WHILE %retryCount% < %maxRetries%
                TRY
                    # Primary method: Alt+T
                    SEND KEYS Alt+t WINDOW "MetaTrader 5"
                    CALL AdaptiveWait WITH PARAMETERS 3
                    
                    # Check if Strategy Tester opened
                    IF WINDOW "Strategy Tester" NOT EXISTS AND WINDOW "Tester" NOT EXISTS
                        # Secondary method: Ctrl+R
                        SEND KEYS Ctrl+r WINDOW "MetaTrader 5"
                        CALL AdaptiveWait WITH PARAMETERS 3
                        
                        # Tertiary method: Use View menu
                        IF WINDOW "Strategy Tester" NOT EXISTS AND WINDOW "Tester" NOT EXISTS
                            SEND KEYS Alt WINDOW "MetaTrader 5"
                            CALL AdaptiveWait WITH PARAMETERS 1
                            SEND KEYS v WINDOW "MetaTrader 5"
                            CALL AdaptiveWait WITH PARAMETERS 1
                            SEND KEYS t WINDOW "MetaTrader 5"
                            CALL AdaptiveWait WITH PARAMETERS 3
                            
                            # Check again
                            IF WINDOW "Strategy Tester" NOT EXISTS AND WINDOW "Tester" NOT EXISTS
                                THROW "Strategy Tester window did not open"
                            END IF
                        END IF
                    END IF
                    
                    BREAK
                CATCH
                    SET retryCount TO %retryCount% + 1
                    APPEND TEXT "Failed to open Strategy Tester (attempt %retryCount%): %ERROR MESSAGE%\r\n" TO FILE "%logFilePath%"
                    
                    # Capture error state
                    CALL CaptureErrorState WITH PARAMETERS "OpenTester"
                    
                    IF %retryCount% >= %maxRetries%
                        THROW "Failed to open Strategy Tester after %maxRetries% attempts"
                    ELSE
                        CALL AdaptiveWait WITH PARAMETERS 5
                    END IF
                END TRY
            END WHILE
            
            # Configure Strategy Tester using keyboard navigation
            # First, ensure focus is in the Strategy Tester window
            SEND KEYS Alt+Tab WINDOW "Strategy Tester"
            CALL AdaptiveWait WITH PARAMETERS 1
            
            # Select EA - for each EA in the list
            TRY
                # Navigate to Expert Advisor field (first field)
                SEND KEYS Home WINDOW "Strategy Tester"
                CALL AdaptiveWait WITH PARAMETERS 1
                # Open dropdown
                SEND KEYS Alt+Down WINDOW "Strategy Tester"
                CALL AdaptiveWait WITH PARAMETERS 1
                # Type to find the EA
                SEND KEYS "%eaName%" WINDOW "Strategy Tester"
                CALL AdaptiveWait WITH PARAMETERS 1
                SEND KEYS Enter WINDOW "Strategy Tester"
                CALL AdaptiveWait WITH PARAMETERS 1
            CATCH
                # Fallback to alternative keyboard method if first method fails
                TRY
                    # Focus on Strategy Tester window
                    SEND KEYS Alt WINDOW "Strategy Tester"
                    CALL AdaptiveWait WITH PARAMETERS 1
                    # Navigate to Expert dropdown via menu
                    SEND KEYS e WINDOW "Strategy Tester"
                    CALL AdaptiveWait WITH PARAMETERS 1
                    # Type EA name
                    SEND KEYS "%eaName%" WINDOW "Strategy Tester"
                    CALL AdaptiveWait WITH PARAMETERS 1
                    SEND KEYS Enter WINDOW "Strategy Tester"
                    CALL AdaptiveWait WITH PARAMETERS 1
                CATCH
                    APPEND TEXT "Error selecting EA %eaName%: %ERROR MESSAGE%. Skipping to next EA.\r\n" TO FILE "%logFilePath%"
                    CALL CaptureErrorState WITH PARAMETERS "SelectEA"
                    CONTINUE
                END TRY
            END TRY
            
            # Check if symbol exists and select Symbol
            TRY
                # Tab to Symbol field
                SEND KEYS Tab WINDOW "Strategy Tester"
                CALL AdaptiveWait WITH PARAMETERS 1
                # Open dropdown
                SEND KEYS Alt+Down WINDOW "Strategy Tester"
                CALL AdaptiveWait WITH PARAMETERS 1
                # Type to find currency
                SEND KEYS "%currency%" WINDOW "Strategy Tester"
                CALL AdaptiveWait WITH PARAMETERS 1
                
                # Try to select the currency - if it doesn't exist, this will fail
                SEND KEYS Enter WINDOW "Strategy Tester"
                                CALL AdaptiveWait WITH PARAMETERS 1
            CATCH
                # Fallback to alternative keyboard method
                TRY
                    # Navigate to first field
                    SEND KEYS Home WINDOW "Strategy Tester"
                    CALL AdaptiveWait WITH PARAMETERS 1
                    # Tab to Symbol field (second field)
                    SEND KEYS Tab WINDOW "Strategy Tester"
                    CALL AdaptiveWait WITH PARAMETERS 1
                    # Open dropdown
                    SEND KEYS Alt+Down WINDOW "Strategy Tester"
                    CALL AdaptiveWait WITH PARAMETERS 1
                    # Type to find currency
                    SEND KEYS "%currency%" WINDOW "Strategy Tester"
                    CALL AdaptiveWait WITH PARAMETERS 1
                    SEND KEYS Enter WINDOW "Strategy Tester"
                    CALL AdaptiveWait WITH PARAMETERS 1
                CATCH
                    APPEND TEXT "Symbol %currency% not available with broker for EA %eaName%, skipping...\r\n" TO FILE "%logFilePath%"
                                        # Close Strategy Tester window to prepare for next currency
                    SEND KEYS Alt+F4 WINDOW "Strategy Tester"
                    CALL AdaptiveWait WITH PARAMETERS 2
                    
                    # Reset consecutive failures counter since we're skipping by design
                    SET consecutiveFailures TO 0
                    
                    CONTINUE
                END TRY
            END TRY
            
            # Select Model - only once per currency
            TRY
                # Tab to Model field
                SEND KEYS Tab WINDOW "Strategy Tester"
                CALL AdaptiveWait WITH PARAMETERS 1
                # Open dropdown
                SEND KEYS Alt+Down WINDOW "Strategy Tester"
                CALL AdaptiveWait WITH PARAMETERS 1
                # Select "Every tick"
                SEND KEYS "Every tick" WINDOW "Strategy Tester"
                CALL AdaptiveWait WITH PARAMETERS 1
                SEND KEYS Enter WINDOW "Strategy Tester"
                CALL AdaptiveWait WITH PARAMETERS 1
            CATCH
                # Fallback to alternative keyboard method
                TRY
                    # Focus on Strategy Tester window and navigate to first field
                    SEND KEYS Home WINDOW "Strategy Tester"
                    CALL AdaptiveWait WITH PARAMETERS 1
                    # Tab to Model field (third field)
                    SEND KEYS Tab Tab Tab WINDOW "Strategy Tester"
                    CALL AdaptiveWait WITH PARAMETERS 1
                    # Open dropdown and select option
                    SEND KEYS Alt+Down WINDOW "Strategy Tester"
                    CALL AdaptiveWait WITH PARAMETERS 1
                    SEND KEYS "Every tick" WINDOW "Strategy Tester"
                    CALL AdaptiveWait WITH PARAMETERS 1
                    SEND KEYS Enter WINDOW "Strategy Tester"
                    CALL AdaptiveWait WITH PARAMETERS 1
                CATCH
                    APPEND TEXT "Error selecting model for EA %eaName%: %ERROR MESSAGE%. Using default model.\r\n" TO FILE "%logFilePath%"
                    # Continue anyway with default model
                END TRY
            END TRY
            
            # Set Date Range - only once per currency
            TRY
                # Tab to "Use date" checkbox (skip timeframe for now)
                SEND KEYS Tab Tab WINDOW "Strategy Tester"
                CALL AdaptiveWait WITH PARAMETERS 1
                # Check the box if not already checked
                SEND KEYS Space WINDOW "Strategy Tester"
                CALL AdaptiveWait WITH PARAMETERS 1
                
                # Tab to From date field
                SEND KEYS Tab WINDOW "Strategy Tester"
                CALL AdaptiveWait WITH PARAMETERS 1
                # Select all text and replace
                SEND KEYS Ctrl+a WINDOW "Strategy Tester"
                CALL AdaptiveWait WITH PARAMETERS 1
                SEND KEYS "%startDate%" WINDOW "Strategy Tester"
                CALL AdaptiveWait WITH PARAMETERS 1
                
                # Tab to To date field
                SEND KEYS Tab WINDOW "Strategy Tester"
                CALL AdaptiveWait WITH PARAMETERS 1
                # Select all text and replace
                SEND KEYS Ctrl+a WINDOW "Strategy Tester"
                CALL AdaptiveWait WITH PARAMETERS 1
                SEND KEYS "%endDate%" WINDOW "Strategy Tester"
                CALL AdaptiveWait WITH PARAMETERS 1
            CATCH
                # Fallback to alternative keyboard method
                TRY
                    # Focus on Strategy Tester window and navigate to first field
                    SEND KEYS Home WINDOW "Strategy Tester"
                    CALL AdaptiveWait WITH PARAMETERS 1
                    # Tab to "Use date" checkbox (skip timeframe field)
                    SEND KEYS Tab Tab Tab Tab Tab WINDOW "Strategy Tester"
                    CALL AdaptiveWait WITH PARAMETERS 1
                    # Check the box
                    SEND KEYS Space WINDOW "Strategy Tester"
                    CALL AdaptiveWait WITH PARAMETERS 1
                    # Tab to From date field
                    SEND KEYS Tab WINDOW "Strategy Tester"
                    CALL AdaptiveWait WITH PARAMETERS 1
                    # Select all and enter start date
                    SEND KEYS Ctrl+a WINDOW "Strategy Tester"
                    CALL AdaptiveWait WITH PARAMETERS 1
                    SEND KEYS "%startDate%" WINDOW "Strategy Tester"
                    CALL AdaptiveWait WITH PARAMETERS 1
                    # Tab to To date field
                    SEND KEYS Tab WINDOW "Strategy Tester"
                    CALL AdaptiveWait WITH PARAMETERS 1
                    # Select all and enter end date
                    SEND KEYS Ctrl+a WINDOW "Strategy Tester"
                    CALL AdaptiveWait WITH PARAMETERS 1
                    SEND KEYS "%endDate%" WINDOW "Strategy Tester"
                    CALL AdaptiveWait WITH PARAMETERS 1
                CATCH
                    APPEND TEXT "Error setting date range for EA %eaName%: %ERROR MESSAGE%. Using default date range.\r\n" TO FILE "%logFilePath%"
                    # Continue anyway with default date range
                END TRY
            END TRY
            
            # Save these base settings
            CALL SaveCurrentSettings
            
            # Loop through timeframes
            FOR EACH timeframe IN %timeframes% WITH INDEX timeframeIndex
                # Skip to checkpoint position if resuming
                IF %resumeFromCheckpoint% AND %eaIndex% = %eaIndex% AND %currencyIndex% = %currencyIndex% AND %timeframeIndex% < %timeframeIndex%
                    CONTINUE
                ELSIF %resumeFromCheckpoint% AND %eaIndex% = %eaIndex% AND %currencyIndex% = %currencyIndex% AND %timeframeIndex% = %timeframeIndex%
                    # We've reached the exact checkpoint position, disable resuming for subsequent iterations
                    SET resumeFromCheckpoint TO false
                END IF
                
                TRY
                    APPEND TEXT "Setting timeframe to %timeframe% for EA %eaName% on %currency%\r\n" TO FILE "%logFilePath%"
                    
                    # Check system resources before starting a new timeframe test
                    CALL DetailedSystemCheck
                    
                    # Load the saved settings
                    CALL LoadSettings
                    
                    # Only modify the timeframe
                    SEND KEYS Home WINDOW "Strategy Tester"
                    CALL AdaptiveWait WITH PARAMETERS 1
                    SEND KEYS Tab Tab Tab WINDOW "Strategy Tester"
                    CALL AdaptiveWait WITH PARAMETERS 1
                    
                    # Open dropdown and select timeframe
                    SEND KEYS Alt+Down WINDOW "Strategy Tester"
                    CALL AdaptiveWait WITH PARAMETERS 1
                    SEND KEYS "%timeframe%" WINDOW "Strategy Tester"
                    CALL AdaptiveWait WITH PARAMETERS 1
                    SEND KEYS Enter WINDOW "Strategy Tester"
                    CALL AdaptiveWait WITH PARAMETERS 1
                    
                    # Save the modified settings (optional - only if you want to preserve the last state)
                    CALL SaveCurrentSettings
                    
                    # Save checkpoint before starting test
                    CALL SaveCheckpoint
                    
                    # Start Test with keyboard shortcut
                    SEND KEYS F9 WINDOW "Strategy Tester"
                    CALL AdaptiveWait WITH PARAMETERS 5
                    
                    APPEND TEXT "Test started for EA %eaName% on %currency% with %timeframe%\r\n" TO FILE "%logFilePath%"
                    
                    # Wait for test to complete with optimized progress monitoring
                    SET testWaitTime TO 0
                    SET testCompleted TO false
                    SET statusCheckInterval TO 10  # Check every 10 seconds
                    SET lastProgressValue TO "0"
                    SET noProgressCounter TO 0
                    SET maxNoProgressIntervals TO 30  # Allow 5 minutes (30 × 10s) without progress before considering frozen
                    SET mtFrozenCounter TO 0
                    SET previousLoggedProgress TO "0"
                    SET lastProgressLogTime TO 0

                    APPEND TEXT "Monitoring backtest progress...\r\n" TO FILE "%logFilePath%"

                    WHILE NOT %testCompleted%
                        # Method 1: Check if Start button is enabled again (test completed)
                        TRY
                            IF ELEMENT "Start button (enabled)" EXISTS
                                APPEND TEXT "Test completion detected: Start button is enabled again\r\n" TO FILE "%logFilePath%"
                                SET testCompleted TO true
                                BREAK
                            END IF
                        CATCH
                            # Continue to other detection methods
                        END TRY
                            
                        # Method 2: Check for report tab appearance
                        TRY
                            IF ELEMENT "Report tab" EXISTS
                                APPEND TEXT "Test completion detected: Report tab appeared\r\n" TO FILE "%logFilePath%"
                                SET testCompleted TO true
                                BREAK
                            END IF
                        CATCH
                            # Continue to other detection methods
                        END TRY
                            
                        # Method 3: Check status bar text for completion indicators
                        TRY
                            GET TEXT FROM ELEMENT "Status bar" STORE RESULT IN statusText
                            IF CONTAINS "%statusText%" "complete" OR CONTAINS "%statusText%" "100%" OR CONTAINS "%statusText%" "finished"
                                APPEND TEXT "Test completion detected: Status bar indicates completion\r\n" TO FILE "%logFilePath%"
                                SET testCompleted TO true
                                BREAK
                            END IF
                                
                            # Check for progress changes to detect if test is still running
                            # Extract progress percentage from status text if available
                            IF CONTAINS "%statusText%" "%"
                                # Extract just the percentage value
                                SET currentProgress TO EXTRACT REGEX "(\d+)%" FROM "%statusText%"
                                    
                                IF "%currentProgress%" != "%lastProgressValue%"
                                    # Progress has changed, reset the no-progress counter
                                    SET lastProgressValue TO "%currentProgress%"
                                    SET noProgressCounter TO 0
                                    
                                    # Log progress less frequently for long runs
                                    SET currentTime TO %CURRENT TIME IN SECONDS%
                                    IF %currentTime% - %lastProgressLogTime% > 300 OR (%lastProgressValue% % %logProgressInterval% = 0 AND "%lastProgressValue%" != "%previousLoggedProgress%")
                                        APPEND TEXT "Backtest in progress: %lastProgressValue%% complete after %testWaitTime% seconds\r\n" TO FILE "%logFilePath%"
                                        SET previousLoggedProgress TO "%lastProgressValue%"
                                        SET lastProgressLogTime TO %currentTime%
                                    END IF
                                ELSE
                                    # No change in progress, increment counter
                                    SET noProgressCounter TO %noProgressCounter% + 1
                                END IF
                            END IF
                        CATCH
                            # Continue to other detection methods
                        END TRY
                            
                        # Check system resources periodically during the test - less frequently for long runs
                        IF %testWaitTime% % 120 = 0
                            CALL DetailedSystemCheck
                        END IF
                            
                        # Check if MT5 is responsive - less frequently for long runs
                        IF %testWaitTime% % 120 = 0 AND %testWaitTime% > 0
                            TRY
                                # Send a harmless key to check if window responds
                                SEND KEYS Home WINDOW "Strategy Tester"
                                CALL AdaptiveWait WITH PARAMETERS 1
                                    
                                # Reset frozen counter if MT5 responds
                                SET mtFrozenCounter TO 0
                            CATCH
                                # MT5 didnaborted
                                SET mtFrozenCounter TO %mtFrozenCounter% + 1
                                APPEND TEXT "Warning: MT5 may be unresponsive (attempt %mtFrozenCounter%)\r\n" TO FILE "%logFilePath%"
                                    
                                # Check system resources before declaring frozen
                                CALL DetailedSystemCheck
                                    
                                # Only consider MT5 frozen after multiple failed response checks
                                # Be more tolerant if system is under load
                                IF %mtFrozenCounter% >= 3 AND %availableMemory% > %lowMemoryThreshold%
                                    APPEND TEXT "MT5 appears to be frozen. Attempting recovery...\r\n" TO FILE "%logFilePath%"
                                    CALL CaptureErrorState WITH PARAMETERS "MT5Frozen"
                                    SET testCompleted TO true
                                    SET consecutiveFailures TO %consecutiveFailures% + 1
                                    BREAK
                                ELSIF %mtFrozenCounter% >= 5
                                    # Even with low memory, don't wait forever
                                    APPEND TEXT "MT5 appears to be frozen despite system load. Attempting recovery...\r\n" TO FILE "%logFilePath%"
                                    CALL CaptureErrorState WITH PARAMETERS "MT5Frozen"
                                    SET testCompleted TO true
                                    SET consecutiveFailures TO %consecutiveFailures% + 1
                                    BREAK
                                END IF
                            END TRY
                        END IF
                            
                        # Periodic heartbeat log to show script is still running - reduced frequency
                        IF %testWaitTime% % 1800 = 0 AND %testWaitTime% > 0
                            APPEND TEXT "Backtest still running after %testWaitTime% seconds. Continuing to wait for completion...\r\n" TO FILE "%logFilePath%"
                        END IF
                            
                        CALL AdaptiveWait WITH PARAMETERS %statusCheckInterval%
                        SET testWaitTime TO %testWaitTime% + %statusCheckInterval%
                    END WHILE

                    # If we detected the test is frozen, try to recover
                    IF %testCompleted% AND %consecutiveFailures% > 0
                        # Try to cancel any hanging test
                        TRY
                            SEND KEYS Escape WINDOW "Strategy Tester"
                            CALL AdaptiveWait WITH PARAMETERS 2
                            SEND KEYS Enter  # In case a confirmation dialog appears
                            CALL AdaptiveWait WITH PARAMETERS 1
                        CATCH
                            # Ignore errors when canceling
                        END TRY
                            
                        # Skip to next timeframe if we had to force completion
                        IF %mtFrozenCounter% >= 3 OR %noProgressCounter% >= %maxNoProgressIntervals% * 2
                            APPEND TEXT "Skipping to next timeframe due to detected freeze\r\n" TO FILE "%logFilePath%"
                            CONTINUE
                        END IF
                    END IF
                        
                    # Save Report as Excel format
                TRY
                    # Right-click on the report tab to open context menu
                    RIGHT CLICK ELEMENT "Report tab" WINDOW "Strategy Tester"
                    CALL AdaptiveWait WITH PARAMETERS 1
                        
                    # Select "Report" from the context menu
                    SEND KEYS "r" WINDOW "Strategy Tester"
                    CALL AdaptiveWait WITH PARAMETERS 1
                        
                    # Select "Excel" from the submenu
                    SEND KEYS "e" WINDOW "Strategy Tester"
                    CALL AdaptiveWait WITH PARAMETERS 2
                        
                    # Now we should have the Save As dialog with the Excel-compatible XML format
                    # Get the default filename that MT5 suggests
                    SEND KEYS Ctrl+a WINDOW "Save As"
                    CALL AdaptiveWait WITH PARAMETERS 1
                    SEND KEYS Ctrl+c WINDOW "Save As"
                    CALL AdaptiveWait WITH PARAMETERS 1
                    GET CLIPBOARD TEXT STORE RESULT IN defaultFileName
                        
                    # Append our custom naming to MT5's default filename
                    SET customSuffix TO "_%eaName%_%currency%_%timeframe%_(%reportCounter%)"
                        
                    # Remove extension to add our suffix before the extension
                    SET baseFileName TO EXTRACT REGEX "(.*)\.[^.]*$" FROM "%defaultFileName%"
                    IF "%baseFileName%" = ""
                        SET baseFileName TO "%defaultFileName%"
                    END IF
                        
                    # Get the extension
                    SET fileExtension TO EXTRACT REGEX ".*(\.[^.]*$)" FROM "%defaultFileName%"
                    IF "%fileExtension%" = ""
                        SET fileExtension TO ".xml"
                    END IF
                        
                    SET reportFileName TO "%baseFileName%%customSuffix%%fileExtension%"
                        
                    # Set the complete path and filename
                    SEND KEYS "%reportPath%\%reportFileName%" WINDOW "Save As"
                    CALL AdaptiveWait WITH PARAMETERS 1
                    SEND KEYS Enter WINDOW "Save As"
                    CALL AdaptiveWait WITH PARAMETERS 3
                        
                    APPEND TEXT "Excel report saved: %reportFileName%\r\n" TO FILE "%logFilePath%"
                        
                    # Increment counter
                    SET reportCounter TO %reportCounter% + 1
                        
                    # Reset consecutive failures counter on success
                    SET consecutiveFailures TO 0
                        
                    # Close report tab with keyboard shortcut
                    SEND KEYS Ctrl+F4 WINDOW "Strategy Tester"
                    CALL AdaptiveWait WITH PARAMETERS 2

                CATCH
                    # Fallback method using alternative approach
                TRY
                    # Try alternative method to access Excel report
                    # First ensure focus is on Strategy Tester
                    SEND KEYS Alt+Tab WINDOW "Strategy Tester"
                    CALL AdaptiveWait WITH PARAMETERS 1
                        
                    # Use Alt key to access menu
                    SEND KEYS Alt WINDOW "Strategy Tester"
                    CALL AdaptiveWait WITH PARAMETERS 1
                    SEND KEYS v WINDOW "Strategy Tester"  # View menu
                    CALL AdaptiveWait WITH PARAMETERS 1
                    SEND KEYS r WINDOW "Strategy Tester"  # Report submenu
                    CALL AdaptiveWait WITH PARAMETERS 1
                    SEND KEYS e WINDOW "Strategy Tester"  # Excel option
                    CALL AdaptiveWait WITH PARAMETERS 2
                        
                    # Now we should have the Save As dialog with the Excel-compatible XML format
                    # Get the default filename that MT5 suggests
                    SEND KEYS Ctrl+a WINDOW "Save As"
                    CALL AdaptiveWait WITH PARAMETERS 1
                    SEND KEYS Ctrl+c WINDOW "Save As"
                    CALL AdaptiveWait WITH PARAMETERS 1
                    GET CLIPBOARD TEXT STORE RESULT IN defaultFileName
                        
                    # Append our custom naming to MT5's default filename
                    SET customSuffix TO "_%eaName%_%currency%_%timeframe%_(%reportCounter%)"