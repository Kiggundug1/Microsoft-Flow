{
    "$schema": "https://aka.ms/powerautomate/desktop/flowschema",
    "name": "Backtest_Flow_Imported",
    "description": "Automated MT5 backtesting flow created by ChatGPT.",
    "main": {
        "actions": [
            {
                "id": "1",
                "displayName": "Initialize Backtest Flow Logic",
                "type": "LogMessage",
                "inputs": {
                    "message": "# Initialize variables with enhanced error handling\nTRY\n    # Default configuration values - will be overridden by config file if present\n    SET defaultConfig TO {\n        \"mt5Path\": \"C:\\Program Files\\MetaTrader 5 EXNESS\\terminal64.exe\",\n        \"eaPath\": \"C:\\Users\\kigundu\\AppData\\Roaming\\MetaQuotes\\Terminal\\53785E099C927DB68A545C249CDBCE06\\MQL5\\Experts\\Custom EAs\\Moving Average\",\n        \"reportPath\": \"D:\\FOREX\\FOREX DOCUMENTS\\MT5 STRATEGY TESTER REPORTS\\Reports\",\n        \"startDate\": \"2019.01.01\",\n        \"endDate\": \"2024.12.31\",\n        \"reportCounter\": 1,\n        \"maxWaitTimeForTest\": 180,\n        \"initialLoadTime\": 15,\n        \"maxRetries\": 3,\n        \"skipOnError\": true,\n        \"autoRestartOnFailure\": true,\n        \"maxConsecutiveFailures\": 5,\n        \"adaptiveWaitEnabled\": true,\n        \"baseWaitMultiplier\": 1.0,\n        \"maxAdaptiveWaitMultiplier\": 5,\n        \"systemLoadCheckInterval\": 300,\n        \"lowMemoryThreshold\": 200,\n        \"verboseLogging\": false,\n        \"logProgressInterval\": 10,\n        \"detailedSystemCheckInterval\": 600,\n        \"logFilePath\": \"D:\\FOREX\\FOREX DOCUMENTS\\MT5 STRATEGY TESTER REPORTS\\automation_log.json\",\n        \"errorScreenshotsPath\": \"D:\\FOREX\\FOREX DOCUMENTS\\MT5 STRATEGY TESTER REPORTS\\Reports\\errors\",\n        \"checkpointFile\": \"D:\\FOREX\\FOREX DOCUMENTS\\MT5 STRATEGY TESTER REPORTS\\Reports\\checkpoint.json\",\n        \"configFilePath\": \"D:\\FOREX\\FOREX DOCUMENTS\\MT5 STRATEGY TESTER REPORTS\\Reports\\backtest_config.json\",\n        \"performanceHistoryFile\": \"D:\\FOREX\\FOREX DOCUMENTS\\MT5 STRATEGY TESTER REPORTS\\Reports\\performance_history.json\",\n        \"retryBackoffMultiplier\": 1.5,\n        \"maxRetryWaitTime\": 60\n    }\n    \n    # Initialize variables with default values\n    SET mt5Path TO \"%defaultConfig.mt5Path%\"\n    SET eaPath TO \"%defaultConfig.eaPath%\"\n    SET reportPath TO \"%defaultConfig.reportPath%\"\n    SET startDate TO \"%defaultConfig.startDate%\"\n    SET endDate TO \"%defaultConfig.endDate%\"\n    SET reportCounter TO %defaultConfig.reportCounter%\n    SET maxWaitTimeForTest TO %defaultConfig.maxWaitTimeForTest%\n    SET initialLoadTime TO %defaultConfig.initialLoadTime%\n    SET maxRetries TO %defaultConfig.maxRetries%\n    SET skipOnError TO %defaultConfig.skipOnError%\n    SET autoRestartOnFailure TO %defaultConfig.autoRestartOnFailure%\n    SET maxConsecutiveFailures TO %defaultConfig.maxConsecutiveFailures%\n    SET consecutiveFailures TO 0\n    SET adaptiveWaitEnabled TO %defaultConfig.adaptiveWaitEnabled%\n    SET baseWaitMultiplier TO %defaultConfig.baseWaitMultiplier%\n    SET maxAdaptiveWaitMultiplier TO %defaultConfig.maxAdaptiveWaitMultiplier%\n    SET currentAdaptiveMultiplier TO 1.0\n    SET systemLoadCheckInterval TO %defaultConfig.systemLoadCheckInterval%\n    SET lastSystemLoadCheck TO 0\n    SET lowMemoryThreshold TO %defaultConfig.lowMemoryThreshold%\n    SET availableMemory TO 1000\n    SET verboseLogging TO %defaultConfig.verboseLogging%\n    SET logProgressInterval TO %defaultConfig.logProgressInterval%\n    SET detailedSystemCheckInterval TO %defaultConfig.detailedSystemCheckInterval%\n    SET logFilePath TO \"%defaultConfig.logFilePath%\"\n    SET errorScreenshotsPath TO \"%defaultConfig.errorScreenshotsPath%\"\n    SET checkpointFile TO \"%defaultConfig.checkpointFile%\"\n    SET eaIndex TO 0\n    SET currencyIndex TO 0\n    SET timeframeIndex TO 0\n    SET resumeFromCheckpoint TO false\n    SET configFilePath TO \"%defaultConfig.configFilePath%\"\n    SET performanceHistoryFile TO \"%defaultConfig.performanceHistoryFile%\"\n    SET retryBackoffMultiplier TO %defaultConfig.retryBackoffMultiplier%\n    SET maxRetryWaitTime TO %defaultConfig.maxRetryWaitTime%\n    \n    # Check if paths exist\n    IF FOLDER NOT EXISTS \"%mt5Path%\"\n        THROW \"MetaTrader 5 path does not exist: %mt5Path%\"\n    END IF\n    \n    IF FOLDER NOT EXISTS \"%eaPath%\"\n        THROW \"EA path does not exist: %eaPath%\"\n    END IF\n    \n    IF FOLDER NOT EXISTS \"%reportPath%\"\n        # Create reports folder if it doesn't exist\n        CREATE FOLDER \"%reportPath%\"\n    END IF\n    \n    IF FOLDER NOT EXISTS \"%errorScreenshotsPath%\"\n        CREATE FOLDER \"%errorScreenshotsPath%\"\n    END IF\n    \n    # Initialize performance history data structure\n    CREATE DICTIONARY performanceHistory\n    IF FILE EXISTS \"%performanceHistoryFile%\"\n        TRY\n            READ FILE \"%performanceHistoryFile%\" STORE RESULT IN historyData\n            SET performanceHistory TO PARSE JSON \"%historyData%\"\n        CATCH\n            # If file exists but can't be parsed, initialize empty\n            APPEND TEXT \"Error reading performance history file. Initializing new history.\\r\\n\" TO FILE \"%logFilePath%\"\n        END TRY\n    END IF\n    \n    # Log start of execution with structured format\n    SET logEntry TO {\n        \"timestamp\": \"%CURRENT DATE% %CURRENT TIME%\",\n        \"level\": \"INFO\",\n        \"message\": \"Started execution\",\n        \"details\": {\n            \"mt5Path\": \"%mt5Path%\",\n            \"eaPath\": \"%eaPath%\",\n            \"reportPath\": \"%reportPath%\"\n        }\n    }\n    APPEND TEXT \"%logEntry TO JSON%\\r\\n\" TO FILE \"%logFilePath%\"\nCATCH\n    # Create structured error log\n    SET errorLog TO {\n        \"timestamp\": \"%CURRENT DATE% %CURRENT TIME%\",\n        \"level\": \"ERROR\",\n        \"message\": \"Error during initialization\",\n        \"error\": \"%ERROR MESSAGE%\"\n    }\n    APPEND TEXT \"%errorLog TO JSON%\\r\\n\" TO FILE \"%logFilePath%\"\n    \n    DISPLAY MESSAGE \"Error during initialization: %ERROR MESSAGE%\"\n    \n    IF %skipOnError%\n        SET continueLog TO {\n            \"timestamp\": \"%CURRENT DATE% %CURRENT TIME%\",\n            \"level\": \"WARN\",\n            \"message\": \"Continuing despite initialization error\"\n        }\n        APPEND TEXT \"%continueLog TO JSON%\\r\\n\" TO FILE \"%logFilePath%\"\n    ELSE\n        EXIT FLOW\n    END IF\nEND TRY\n\n# Function to log messages in structured format\nFUNCTION LogMessage\n    PARAMETERS level message details\n    \n    SET logEntry TO {\n        \"timestamp\": \"%CURRENT DATE% %CURRENT TIME%\",\n        \"level\": \"%level%\",\n        \"message\": \"%message%\"\n    }\n    \n    # Add details if provided\n    IF \"%details%\" != \"\"\n        SET logEntry.details TO %details%\n    END IF\n    \n    # Only log if verbose mode is on or if it's an important message\n    IF %verboseLogging% OR \"%level%\" = \"ERROR\" OR \"%level%\" = \"WARN\" OR \"%level%\" = \"INFO\"\n        APPEND TEXT \"%logEntry TO JSON%\\r\\n\" TO FILE \"%logFilePath%\"\n    END IF\nEND FUNCTION\n\n# Function to verify and set a value only if needed\nFUNCTION VerifyAndSetValue\n    PARAMETERS fieldName currentValue targetValue\n    \n    IF \"%currentValue%\" != \"%targetValue%\"\n        CALL LogMessage WITH PARAMETERS \"DEBUG\" \"Changing %fieldName% from '%currentValue%' to '%targetValue%'\" \"\"\n        RETURN false  # Value needs to be set\n    ELSE\n        CALL LogMessage WITH PARAMETERS \"DEBUG\" \"%fieldName% already set to '%targetValue%', skipping\" \"\"\n        RETURN true  # Value already correct\n    END IF\nEND FUNCTION\n\n# Function to load configuration with improved JSON support\nFUNCTION LoadConfiguration\n    IF FILE EXISTS \"%configFilePath%\"\n        TRY\n            CALL LogMessage WITH PARAMETERS \"INFO\" \"Loading configuration from %configFilePath%\" \"\"\n            READ FILE \"%configFilePath%\" STORE RESULT IN configData\n            \n            # Try to parse as JSON first\n            TRY\n                SET config TO PARSE JSON \"%configData%\"\n                \n                # Apply configuration from JSON object\n                IF PROPERTY \"mt5Path\" EXISTS IN config\n                    SET mt5Path TO \"%config.mt5Path%\"\n                END IF\n                \n                IF PROPERTY \"eaPath\" EXISTS IN config\n                    SET eaPath TO \"%config.eaPath%\"\n                END IF\n                \n                IF PROPERTY \"reportPath\" EXISTS IN config\n                    SET reportPath TO \"%config.reportPath%\"\n                END IF\n                \n                IF PROPERTY \"startDate\" EXISTS IN config\n                    SET startDate TO \"%config.startDate%\"\n                END IF\n                \n                IF PROPERTY \"endDate\" EXISTS IN config\n                    SET endDate TO \"%config.endDate%\"\n                END IF\n                \n                IF PROPERTY \"maxWaitTimeForTest\" EXISTS IN config\n                    SET maxWaitTimeForTest TO %config.maxWaitTimeForTest%\n                END IF\n                \n                IF PROPERTY \"initialLoadTime\" EXISTS IN config\n                    SET initialLoadTime TO %config.initialLoadTime%\n                END IF\n                \n                IF PROPERTY \"maxRetries\" EXISTS IN config\n                    SET maxRetries TO %config.maxRetries%\n                END IF\n                \n                IF PROPERTY \"skipOnError\" EXISTS IN config\n                    SET skipOnError TO %config.skipOnError%\n                END IF\n                \n                IF PROPERTY \"autoRestartOnFailure\" EXISTS IN config\n                    SET autoRestartOnFailure TO %config.autoRestartOnFailure%\n                END IF\n                \n                IF PROPERTY \"maxConsecutiveFailures\" EXISTS IN config\n                    SET maxConsecutiveFailures TO %config.maxConsecutiveFailures%\n                END IF\n                \n                IF PROPERTY \"adaptiveWaitEnabled\" EXISTS IN config\n                    SET adaptiveWaitEnabled TO %config.adaptiveWaitEnabled%\n                END IF\n                \n                IF PROPERTY \"baseWaitMultiplier\" EXISTS IN config\n                    SET baseWaitMultiplier TO %config.baseWaitMultiplier%\n                END IF\n                \n                IF PROPERTY \"maxAdaptiveWaitMultiplier\" EXISTS IN config\n                    SET maxAdaptiveWaitMultiplier TO %config.maxAdaptiveWaitMultiplier%\n                END IF\n                \n                IF PROPERTY \"systemLoadCheckInterval\" EXISTS IN config\n                    SET systemLoadCheckInterval TO %config.systemLoadCheckInterval%\n                END IF\n                \n  ..."
                }
            }
        ]
    }
}