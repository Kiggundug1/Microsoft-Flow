<html>

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<meta name=Generator content="Microsoft Word 15 (filtered)">
<style>
<!--
 /* Font Definitions */
 @font-face
	{font-family:Wingdings;
	panose-1:5 0 0 0 0 0 0 0 0 0;}
@font-face
	{font-family:"Cambria Math";
	panose-1:2 4 5 3 5 4 6 3 2 4;}
@font-face
	{font-family:Aptos;}
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
	{margin-top:0cm;
	margin-right:0cm;
	margin-bottom:8.0pt;
	margin-left:0cm;
	line-height:115%;
	font-size:12.0pt;
	font-family:"Aptos",sans-serif;}
a:link, span.MsoHyperlink
	{color:blue;
	text-decoration:underline;}
.MsoChpDefault
	{font-size:12.0pt;
	font-family:"Aptos",sans-serif;}
.MsoPapDefault
	{margin-bottom:8.0pt;
	line-height:115%;}
@page WordSection1
	{size:612.0pt 792.0pt;
	margin:72.0pt 72.0pt 72.0pt 72.0pt;}
div.WordSection1
	{page:WordSection1;}
 /* List Definitions */
 ol
	{margin-bottom:0cm;}
ul
	{margin-bottom:0cm;}
-->
</style>

</head>

<body lang=EN-US link=blue vlink=purple style='word-wrap:break-word'>

<div class=WordSection1>

<p class=MsoNormal><b>Complete Step-by-Step Guide to Creating the MT5 Backtest
Flow Script in Power Automate Desktop</b></p>

<p class=MsoNormal>I'll guide you through creating the entire MT5 Backtest Flow
script in Power Automate Desktop, explaining each step in detail as if teaching
a 12-year-old. I won't skip any parts this time.</p>

<p class=MsoNormal><b>Step 1: Install and Open Power Automate Desktop</b></p>

<ol style='margin-top:0cm' start=1 type=1>
 <li class=MsoNormal>First, we need to install Power Automate Desktop:</li>
 <ul style='margin-top:0cm' type=circle>
  <li class=MsoNormal>Open your web browser</li>
  <li class=MsoNormal>Go to&nbsp;<a
      href="command:_cody.vscode.open?%22https%3A%2F%2Fflow.microsoft.com%2Fen-us%2Fdesktop%2F%22">https://flow.microsoft.com/en-us/desktop/</a></li>
  <li class=MsoNormal>Click &quot;Download Power Automate Desktop&quot;</li>
  <li class=MsoNormal>Run the installer and follow the on-screen instructions</li>
 </ul>
 <li class=MsoNormal>After installation, open Power Automate Desktop:</li>
 <ul style='margin-top:0cm' type=circle>
  <li class=MsoNormal>Click on the Windows Start menu</li>
  <li class=MsoNormal>Type &quot;Power Automate Desktop&quot;</li>
  <li class=MsoNormal>Click on the Power Automate Desktop app</li>
 </ul>
</ol>

<p class=MsoNormal><b>Step 2: Create a New Flow</b></p>

<ol style='margin-top:0cm' start=1 type=1>
 <li class=MsoNormal>When Power Automate Desktop opens, you'll see the main
     screen:</li>
 <ul style='margin-top:0cm' type=circle>
  <li class=MsoNormal>Click on the &quot;New flow&quot; button (it has a +
      symbol)</li>
  <li class=MsoNormal>A dialog will appear asking for a flow name</li>
  <li class=MsoNormal>Type &quot;Backtest flow script V1.1.5&quot; as the name</li>
  <li class=MsoNormal>Click &quot;Create&quot; button</li>
 </ul>
 <li class=MsoNormal>Now you'll see the flow designer screen with a blank
     canvas</li>
</ol>

<p class=MsoNormal><b>Step 3: Initialize Default Configuration Variables</b></p>

<ol style='margin-top:0cm' start=1 type=1>
 <li class=MsoNormal>First, we'll create our default configuration object:</li>
 <ul style='margin-top:0cm' type=circle>
  <li class=MsoNormal>Click the &quot;+&quot; button to add an action</li>
  <li class=MsoNormal>In the search box, type &quot;Set variable&quot;</li>
  <li class=MsoNormal>Select &quot;Set variable&quot; from the results</li>
  <li class=MsoNormal>In the &quot;Variable name&quot; field,
      type&nbsp;defaultConfig</li>
  <li class=MsoNormal>For &quot;Variable type&quot;, select &quot;Object&quot;</li>
  <li class=MsoNormal>In the &quot;Variable value&quot; field, paste the entire
      JSON object from lines 5-36 of the script:</li>
 </ul>
 <li class=MsoNormal>{</li>
 <li class=MsoNormal>    &quot;mt5Path&quot;: &quot;C:\\Program
     Files\\MetaTrader 5 EXNESS\\terminal64.exe&quot;,</li>
 <li class=MsoNormal>    &quot;eaPath&quot;:
     &quot;C:\\Users\\kigundu\\AppData\\Roaming\\MetaQuotes\\Terminal\\53785E099C927DB68A545C249CDBCE06\\MQL5\\Experts\\Custom
     EAs\\Moving Average&quot;,</li>
 <li class=MsoNormal>    &quot;reportPath&quot;: &quot;D:\\FOREX\\FOREX
     DOCUMENTS\\MT5 STRATEGY TESTER REPORTS\\Reports&quot;,</li>
 <li class=MsoNormal>    &quot;startDate&quot;: &quot;2019.01.01&quot;,</li>
 <li class=MsoNormal>    &quot;endDate&quot;: &quot;2024.12.31&quot;,</li>
 <li class=MsoNormal>    &quot;reportCounter&quot;: 1,</li>
 <li class=MsoNormal>    &quot;maxWaitTimeForTest&quot;: 180,</li>
 <li class=MsoNormal>    &quot;initialLoadTime&quot;: 15,</li>
 <li class=MsoNormal>    &quot;maxRetries&quot;: 3,</li>
 <li class=MsoNormal>    &quot;skipOnError&quot;: true,</li>
 <li class=MsoNormal>    &quot;autoRestartOnFailure&quot;: true,</li>
 <li class=MsoNormal>    &quot;maxConsecutiveFailures&quot;: 5,</li>
 <li class=MsoNormal>    &quot;adaptiveWaitEnabled&quot;: true,</li>
 <li class=MsoNormal>    &quot;baseWaitMultiplier&quot;: 1.0,</li>
 <li class=MsoNormal>    &quot;maxAdaptiveWaitMultiplier&quot;: 5,</li>
 <li class=MsoNormal>    &quot;systemLoadCheckInterval&quot;: 300,</li>
 <li class=MsoNormal>    &quot;lowMemoryThreshold&quot;: 200,</li>
 <li class=MsoNormal>    &quot;verboseLogging&quot;: false,</li>
 <li class=MsoNormal>    &quot;logProgressInterval&quot;: 10,</li>
 <li class=MsoNormal>    &quot;detailedSystemCheckInterval&quot;: 600,</li>
 <li class=MsoNormal>    &quot;logFilePath&quot;: &quot;D:\\FOREX\\FOREX
     DOCUMENTS\\MT5 STRATEGY TESTER REPORTS\\automation_log.json&quot;,</li>
 <li class=MsoNormal>    &quot;errorScreenshotsPath&quot;:
     &quot;D:\\FOREX\\FOREX DOCUMENTS\\MT5 STRATEGY TESTER
     REPORTS\\Reports\\errors&quot;,</li>
 <li class=MsoNormal>    &quot;checkpointFile&quot;: &quot;D:\\FOREX\\FOREX
     DOCUMENTS\\MT5 STRATEGY TESTER REPORTS\\Reports\\checkpoint.json&quot;,</li>
 <li class=MsoNormal>    &quot;configFilePath&quot;: &quot;D:\\FOREX\\FOREX
     DOCUMENTS\\MT5 STRATEGY TESTER REPORTS\\Reports\\backtest_config.json&quot;,</li>
 <li class=MsoNormal>    &quot;performanceHistoryFile&quot;:
     &quot;D:\\FOREX\\FOREX DOCUMENTS\\MT5 STRATEGY TESTER
     REPORTS\\Reports\\performance_history.json&quot;,</li>
 <li class=MsoNormal>    &quot;retryBackoffMultiplier&quot;: 1.5,</li>
 <li class=MsoNormal>    &quot;maxRetryWaitTime&quot;: 60</li>
 <li class=MsoNormal>}</li>
</ol>

<p class=MsoNormal>Copy</p>

<ol style='margin-top:0cm' start=30 type=1>
 <ul style='margin-top:0cm' type=circle>
  <li class=MsoNormal>Click &quot;Save&quot; to add this action</li>
 </ul>
</ol>

<p class=MsoNormal><b>Step 4: Add Error Handling Structure</b></p>

<ol style='margin-top:0cm' start=1 type=1>
 <li class=MsoNormal>Now we'll add a Try/Catch block to handle errors:</li>
 <ul style='margin-top:0cm' type=circle>
  <li class=MsoNormal>Click the &quot;+&quot; button to add an action</li>
  <li class=MsoNormal>Search for &quot;Try&quot; and select it</li>
  <li class=MsoNormal>This will create a Try block with Catch and Finally
      sections</li>
 </ul>
 <li class=MsoNormal>Move your cursor to inside the Try block (between
     &quot;Try&quot; and &quot;Catch&quot;)</li>
</ol>

<p class=MsoNormal><b>Step 5: Initialize Individual Variables</b></p>

<p class=MsoNormal>Inside the Try block, we'll initialize all our individual
variables:</p>

<ol style='margin-top:0cm' start=1 type=1>
 <li class=MsoNormal>For each configuration setting, add a &quot;Set
     variable&quot; action:</li>
 <ul style='margin-top:0cm' type=circle>
  <li class=MsoNormal>Click &quot;+&quot; inside the Try block</li>
  <li class=MsoNormal>Search for &quot;Set variable&quot; and select it</li>
  <li class=MsoNormal>For the first variable:</li>
  <ul style='margin-top:0cm' type=square>
   <li class=MsoNormal>Name:&nbsp;mt5Path</li>
   <li class=MsoNormal>Type: Text</li>
   <li class=MsoNormal>Value:&nbsp;%defaultConfig.mt5Path%</li>
  </ul>
  <li class=MsoNormal>Click &quot;Save&quot;</li>
 </ul>
 <li class=MsoNormal>Repeat this process for each variable (one by one):</li>
 <ul style='margin-top:0cm' type=circle>
  <li class=MsoNormal>eaPath&nbsp;=&nbsp;%defaultConfig.eaPath%</li>
  <li class=MsoNormal>reportPath&nbsp;=&nbsp;%defaultConfig.reportPath%</li>
  <li class=MsoNormal>startDate&nbsp;=&nbsp;%defaultConfig.startDate%</li>
  <li class=MsoNormal>endDate&nbsp;=&nbsp;%defaultConfig.endDate%</li>
  <li class=MsoNormal>reportCounter&nbsp;=&nbsp;%defaultConfig.reportCounter%</li>
  <li class=MsoNormal>maxWaitTimeForTest&nbsp;=&nbsp;%defaultConfig.maxWaitTimeForTest%</li>
  <li class=MsoNormal>initialLoadTime&nbsp;=&nbsp;%defaultConfig.initialLoadTime%</li>
  <li class=MsoNormal>maxRetries&nbsp;=&nbsp;%defaultConfig.maxRetries%</li>
  <li class=MsoNormal>skipOnError&nbsp;=&nbsp;%defaultConfig.skipOnError%</li>
  <li class=MsoNormal>autoRestartOnFailure&nbsp;=&nbsp;%defaultConfig.autoRestartOnFailure%</li>
  <li class=MsoNormal>maxConsecutiveFailures&nbsp;=&nbsp;%defaultConfig.maxConsecutiveFailures%</li>
  <li class=MsoNormal>consecutiveFailures&nbsp;=&nbsp;0</li>
  <li class=MsoNormal>adaptiveWaitEnabled&nbsp;=&nbsp;%defaultConfig.adaptiveWaitEnabled%</li>
  <li class=MsoNormal>baseWaitMultiplier&nbsp;=&nbsp;%defaultConfig.baseWaitMultiplier%</li>
  <li class=MsoNormal>maxAdaptiveWaitMultiplier&nbsp;=&nbsp;%defaultConfig.maxAdaptiveWaitMultiplier%</li>
  <li class=MsoNormal>currentAdaptiveMultiplier&nbsp;=&nbsp;1.0</li>
  <li class=MsoNormal>systemLoadCheckInterval&nbsp;=&nbsp;%defaultConfig.systemLoadCheckInterval%</li>
  <li class=MsoNormal>lastSystemLoadCheck&nbsp;=&nbsp;0</li>
  <li class=MsoNormal>lowMemoryThreshold&nbsp;=&nbsp;%defaultConfig.lowMemoryThreshold%</li>
  <li class=MsoNormal>availableMemory&nbsp;=&nbsp;1000</li>
  <li class=MsoNormal>verboseLogging&nbsp;=&nbsp;%defaultConfig.verboseLogging%</li>
  <li class=MsoNormal>logProgressInterval&nbsp;=&nbsp;%defaultConfig.logProgressInterval%</li>
  <li class=MsoNormal>detailedSystemCheckInterval&nbsp;=&nbsp;%defaultConfig.detailedSystemCheckInterval%</li>
  <li class=MsoNormal>logFilePath&nbsp;=&nbsp;%defaultConfig.logFilePath%</li>
  <li class=MsoNormal>errorScreenshotsPath&nbsp;=&nbsp;%defaultConfig.errorScreenshotsPath%</li>
  <li class=MsoNormal>checkpointFile&nbsp;=&nbsp;%defaultConfig.checkpointFile%</li>
  <li class=MsoNormal>eaIndex&nbsp;=&nbsp;0</li>
  <li class=MsoNormal>currencyIndex&nbsp;=&nbsp;0</li>
  <li class=MsoNormal>timeframeIndex&nbsp;=&nbsp;0</li>
  <li class=MsoNormal>resumeFromCheckpoint&nbsp;=&nbsp;false</li>
  <li class=MsoNormal>configFilePath&nbsp;=&nbsp;%defaultConfig.configFilePath%</li>
  <li class=MsoNormal>performanceHistoryFile&nbsp;=&nbsp;%defaultConfig.performanceHistoryFile%</li>
  <li class=MsoNormal>retryBackoffMultiplier&nbsp;=&nbsp;%defaultConfig.retryBackoffMultiplier%</li>
  <li class=MsoNormal>maxRetryWaitTime&nbsp;=&nbsp;%defaultConfig.maxRetryWaitTime%</li>
 </ul>
</ol>

<p class=MsoNormal><b>Step 6: Check if Paths Exist</b></p>

<p class=MsoNormal>Still inside the Try block, after setting all variables:</p>

<ol style='margin-top:0cm' start=1 type=1>
 <li class=MsoNormal>Add an If condition to check if MT5 path exists:</li>
 <ul style='margin-top:0cm' type=circle>
  <li class=MsoNormal>Click &quot;+&quot; to add an action</li>
  <li class=MsoNormal>Search for &quot;If&quot; and select it</li>
  <li class=MsoNormal>In the condition field, type:&nbsp;FOLDER NOT EXISTS
      &quot;%mt5Path%&quot;</li>
  <li class=MsoNormal>Inside this If block:</li>
  <ul style='margin-top:0cm' type=square>
   <li class=MsoNormal>Add a &quot;Throw exception&quot; action</li>
   <li class=MsoNormal>Set the message to:&nbsp;&quot;MetaTrader 5 path does
       not exist: %mt5Path%&quot;</li>
  </ul>
  <li class=MsoNormal>Click &quot;Save&quot;</li>
 </ul>
 <li class=MsoNormal>Add another If condition to check if EA path exists:</li>
 <ul style='margin-top:0cm' type=circle>
  <li class=MsoNormal>Click &quot;+&quot; after the End If</li>
  <li class=MsoNormal>Search for &quot;If&quot; and select it</li>
  <li class=MsoNormal>In the condition field, type:&nbsp;FOLDER NOT EXISTS
      &quot;%eaPath%&quot;</li>
  <li class=MsoNormal>Inside this If block:</li>
  <ul style='margin-top:0cm' type=square>
   <li class=MsoNormal>Add a &quot;Throw exception&quot; action</li>
   <li class=MsoNormal>Set the message to:&nbsp;&quot;EA path does not exist:
       %eaPath%&quot;</li>
  </ul>
  <li class=MsoNormal>Click &quot;Save&quot;</li>
 </ul>
 <li class=MsoNormal>Add an If condition to create reports folder if it doesn't
     exist:</li>
 <ul style='margin-top:0cm' type=circle>
  <li class=MsoNormal>Click &quot;+&quot; after the End If</li>
  <li class=MsoNormal>Search for &quot;If&quot; and select it</li>
  <li class=MsoNormal>In the condition field, type:&nbsp;FOLDER NOT EXISTS
      &quot;%reportPath%&quot;</li>
  <li class=MsoNormal>Inside this If block:</li>
  <ul style='margin-top:0cm' type=square>
   <li class=MsoNormal>Add a &quot;Create folder&quot; action</li>
   <li class=MsoNormal>Set the path to:&nbsp;&quot;%reportPath%&quot;</li>
  </ul>
  <li class=MsoNormal>Click &quot;Save&quot;</li>
 </ul>
 <li class=MsoNormal>Add an If condition to create error screenshots folder if
     it doesn't exist:</li>
 <ul style='margin-top:0cm' type=circle>
  <li class=MsoNormal>Click &quot;+&quot; after the End If</li>
  <li class=MsoNormal>Search for &quot;If&quot; and select it</li>
  <li class=MsoNormal>In the condition field, type:&nbsp;FOLDER NOT EXISTS
      &quot;%errorScreenshotsPath%&quot;</li>
  <li class=MsoNormal>Inside this If block:</li>
  <ul style='margin-top:0cm' type=square>
   <li class=MsoNormal>Add a &quot;Create folder&quot; action</li>
   <li class=MsoNormal>Set the path to:&nbsp;&quot;%errorScreenshotsPath%&quot;</li>
  </ul>
  <li class=MsoNormal>Click &quot;Save&quot;</li>
 </ul>
</ol>

<p class=MsoNormal><b>Step 7: Initialize Performance History</b></p>

<p class=MsoNormal>Still inside the Try block:</p>

<ol style='margin-top:0cm' start=1 type=1>
 <li class=MsoNormal>Create a dictionary for performance history:</li>
 <ul style='margin-top:0cm' type=circle>
  <li class=MsoNormal>Click &quot;+&quot; to add an action</li>
  <li class=MsoNormal>Search for &quot;Create dictionary&quot; and select it</li>
  <li class=MsoNormal>Set the variable name to:&nbsp;performanceHistory</li>
  <li class=MsoNormal>Click &quot;Save&quot;</li>
 </ul>
 <li class=MsoNormal>Add an If condition to check if performance history file
     exists:</li>
 <ul style='margin-top:0cm' type=circle>
  <li class=MsoNormal>Click &quot;+&quot; to add an action</li>
  <li class=MsoNormal>Search for &quot;If&quot; and select it</li>
  <li class=MsoNormal>In the condition field, type:&nbsp;FILE EXISTS
      &quot;%performanceHistoryFile%&quot;</li>
  <li class=MsoNormal>Inside this If block:</li>
  <ul style='margin-top:0cm' type=square>
   <li class=MsoNormal>Add a &quot;Try&quot; action to create a nested
       try/catch</li>
   <li class=MsoNormal>Inside this nested Try:</li>
   <ul style='margin-top:0cm' type=square>
    <li class=MsoNormal>Add a &quot;Read text from file&quot; action</li>
    <li class=MsoNormal>Set the file path
        to:&nbsp;&quot;%performanceHistoryFile%&quot;</li>
    <li class=MsoNormal>Set the variable to store the result
        in:&nbsp;historyData</li>
    <li class=MsoNormal>Add a &quot;Parse JSON&quot; action</li>
    <li class=MsoNormal>Set the JSON text to:&nbsp;&quot;%historyData%&quot;</li>
    <li class=MsoNormal>Set the variable to store the result
        in:&nbsp;performanceHistory</li>
   </ul>
   <li class=MsoNormal>Inside the nested Catch:</li>
   <ul style='margin-top:0cm' type=square>
    <li class=MsoNormal>Add an &quot;Append text to file&quot; action</li>
    <li class=MsoNormal>Set the file path to:&nbsp;&quot;%logFilePath%&quot;</li>
    <li class=MsoNormal>Set the text to append:&nbsp;&quot;Error reading
        performance history file. Initializing new history.\r\n&quot;</li>
   </ul>
  </ul>
  <li class=MsoNormal>Click &quot;Save&quot;</li>
 </ul>
</ol>

<p class=MsoNormal><b>Step 8: Log Start of Execution</b></p>

<p class=MsoNormal>Still inside the main Try block:</p>

<ol style='margin-top:0cm' start=1 type=1>
 <li class=MsoNormal>Create a log entry object:</li>
 <ul style='margin-top:0cm' type=circle>
  <li class=MsoNormal>Click &quot;+&quot; to add an action</li>
  <li class=MsoNormal>Search for &quot;Set variable&quot; and select it</li>
  <li class=MsoNormal>Set the variable name to:&nbsp;logEntry</li>
  <li class=MsoNormal>Set the variable type to: Object</li>
  <li class=MsoNormal>Set the value to:</li>
 </ul>
 <li class=MsoNormal>{</li>
 <li class=MsoNormal>    &quot;timestamp&quot;: &quot;%CURRENT DATE% %CURRENT
     TIME%&quot;,</li>
 <li class=MsoNormal>    &quot;level&quot;: &quot;INFO&quot;,</li>
 <li class=MsoNormal>    &quot;message&quot;: &quot;Started execution&quot;,</li>
 <li class=MsoNormal>    &quot;details&quot;: {</li>
 <li class=MsoNormal>        &quot;mt5Path&quot;: &quot;%mt5Path%&quot;,</li>
 <li class=MsoNormal>        &quot;eaPath&quot;: &quot;%eaPath%&quot;,</li>
 <li class=MsoNormal>        &quot;reportPath&quot;: &quot;%reportPath%&quot;</li>
 <li class=MsoNormal>    }</li>
 <li class=MsoNormal>}</li>
</ol>

<p class=MsoNormal>Copy</p>

<ol style='margin-top:0cm' start=11 type=1>
 <ul style='margin-top:0cm' type=circle>
  <li class=MsoNormal>Click &quot;Save&quot;</li>
 </ul>
 <li class=MsoNormal>Append the log entry to the log file:</li>
 <ul style='margin-top:0cm' type=circle>
  <li class=MsoNormal>Click &quot;+&quot; to add an action</li>
  <li class=MsoNormal>Search for &quot;Append text to file&quot; and select it</li>
  <li class=MsoNormal>Set the file path to:&nbsp;&quot;%logFilePath%&quot;</li>
  <li class=MsoNormal>Set the text to append:&nbsp;&quot;%logEntry TO
      JSON%\r\n&quot;</li>
  <li class=MsoNormal>Click &quot;Save&quot;</li>
 </ul>
</ol>

<p class=MsoNormal><b>Step 9: Set Up Catch Block</b></p>

<p class=MsoNormal>Now move to the Catch section (after the Try block):</p>

<ol style='margin-top:0cm' start=1 type=1>
 <li class=MsoNormal>Create an error log entry:</li>
 <ul style='margin-top:0cm' type=circle>
  <li class=MsoNormal>Click &quot;+&quot; inside the Catch block</li>
  <li class=MsoNormal>Search for &quot;Set variable&quot; and select it</li>
  <li class=MsoNormal>Set the variable name to:&nbsp;errorLog</li>
  <li class=MsoNormal>Set the variable type to: Object</li>
  <li class=MsoNormal>Set the value to:</li>
 </ul>
 <li class=MsoNormal>{</li>
 <li class=MsoNormal>    &quot;timestamp&quot;: &quot;%CURRENT DATE% %CURRENT
     TIME%&quot;,</li>
 <li class=MsoNormal>    &quot;level&quot;: &quot;ERROR&quot;,</li>
 <li class=MsoNormal>    &quot;message&quot;: &quot;Error during
     initialization&quot;,</li>
 <li class=MsoNormal>    &quot;error&quot;: &quot;%ERROR MESSAGE%&quot;</li>
 <li class=MsoNormal>}</li>
</ol>

<p class=MsoNormal>Copy</p>

<ol style='margin-top:0cm' start=7 type=1>
 <ul style='margin-top:0cm' type=circle>
  <li class=MsoNormal>Click &quot;Save&quot;</li>
 </ul>
 <li class=MsoNormal>Append the error log to the log file:</li>
 <ul style='margin-top:0cm' type=circle>
  <li class=MsoNormal>Click &quot;+&quot; to add an action</li>
  <li class=MsoNormal>Search for &quot;Append text to file&quot; and select it</li>
  <li class=MsoNormal>Set the file path to:&nbsp;&quot;%logFilePath%&quot;</li>
  <li class=MsoNormal>Set the text to append:&nbsp;&quot;%errorLog TO
      JSON%\r\n&quot;</li>
  <li class=MsoNormal>Click &quot;Save&quot;</li>
 </ul>
 <li class=MsoNormal>Display an error message:</li>
 <ul style='margin-top:0cm' type=circle>
  <li class=MsoNormal>Click &quot;+&quot; to add an action</li>
  <li class=MsoNormal>Search for &quot;Display message&quot; and select it</li>
  <li class=MsoNormal>Set the message to:&nbsp;&quot;Error during
      initialization: %ERROR MESSAGE%&quot;</li>
  <li class=MsoNormal>Click &quot;Save&quot;</li>
 </ul>
 <li class=MsoNormal>Add an If condition to check skipOnError:</li>
 <ul style='margin-top:0cm' type=circle>
  <li class=MsoNormal>Click &quot;+&quot; to add an action</li>
  <li class=MsoNormal>Search for &quot;If&quot; and select it</li>
  <li class=MsoNormal>In the condition field, type:&nbsp;%skipOnError%</li>
  <li class=MsoNormal>Inside this If block:</li>
  <ul style='margin-top:0cm' type=square>
   <li class=MsoNormal>Create a continue log entry:</li>
   <ul style='margin-top:0cm' type=square>
    <li class=MsoNormal>Add a &quot;Set variable&quot; action</li>
    <li class=MsoNormal>Set the variable name to:&nbsp;continueLog</li>
    <li class=MsoNormal>Set the variable type to: Object</li>
    <li class=MsoNormal>Set the value to:</li>
   </ul>
   <li class=MsoNormal>{</li>
   <li class=MsoNormal>    &quot;timestamp&quot;: &quot;%CURRENT DATE% %CURRENT
       TIME%&quot;,</li>
   <li class=MsoNormal>    &quot;level&quot;: &quot;WARN&quot;,</li>
   <li class=MsoNormal>    &quot;message&quot;: &quot;Continuing despite
       initialization error&quot;</li>
   <li class=MsoNormal>}</li>
  </ul>
 </ul>
</ol>

<p class=MsoNormal>Copy</p>

<ol style='margin-top:0cm' start=10 type=1>
 <ul style='margin-top:0cm' type=circle>
  <ul style='margin-top:0cm' type=square>
   <li class=MsoNormal>Append the continue log to the log file:</li>
   <ul style='margin-top:0cm' type=square>
    <li class=MsoNormal>Add an &quot;Append text to file&quot; action</li>
    <li class=MsoNormal>Set the file path to:&nbsp;&quot;%logFilePath%&quot;</li>
    <li class=MsoNormal>Set the text to append:&nbsp;&quot;%continueLog TO
        JSON%\r\n&quot;</li>
   </ul>
  </ul>
  <li class=MsoNormal>In the Else block:</li>
  <ul style='margin-top:0cm' type=square>
   <li class=MsoNormal>Add an &quot;Exit flow&quot; action</li>
  </ul>
  <li class=MsoNormal>Click &quot;Save&quot;</li>
 </ul>
</ol>

<p class=MsoNormal><b>Step 10: Create Helper Functions</b></p>

<p class=MsoNormal>Now we'll create all the helper functions. For each
function:</p>

<p class=MsoNormal><b>10.1. LogMessage Function</b></p>

<ol style='margin-top:0cm' start=1 type=1>
 <li class=MsoNormal>Click &quot;+&quot; after the Try/Catch block</li>
 <li class=MsoNormal>Search for &quot;Function&quot; and select it</li>
 <li class=MsoNormal>Set the function name to:&nbsp;LogMessage</li>
 <li class=MsoNormal>Add parameters:</li>
 <ul style='margin-top:0cm' type=circle>
  <li class=MsoNormal>Click &quot;Add parameter&quot; and add:</li>
  <ul style='margin-top:0cm' type=square>
   <li class=MsoNormal>level&nbsp;(Text)</li>
   <li class=MsoNormal>message&nbsp;(Text)</li>
   <li class=MsoNormal>details&nbsp;(Text)</li>
  </ul>
 </ul>
 <li class=MsoNormal>Inside the function:</li>
 <ul style='margin-top:0cm' type=circle>
  <li class=MsoNormal>Add a &quot;Set variable&quot; action:</li>
  <ul style='margin-top:0cm' type=square>
   <li class=MsoNormal>Variable name:&nbsp;logEntry</li>
   <li class=MsoNormal>Variable type: Object</li>
   <li class=MsoNormal>Value:</li>
  </ul>
  <li class=MsoNormal>{</li>
  <li class=MsoNormal>    &quot;timestamp&quot;: &quot;%CURRENT DATE% %CURRENT
      TIME%&quot;,</li>
  <li class=MsoNormal>    &quot;level&quot;: &quot;%level%&quot;,</li>
  <li class=MsoNormal>    &quot;message&quot;: &quot;%message%&quot;</li>
  <li class=MsoNormal>}</li>
 </ul>
</ol>

<p class=MsoNormal>Copy</p>

<ol style='margin-top:0cm' start=5 type=1>
 <ul style='margin-top:0cm' type=circle>
  <li class=MsoNormal>Add an &quot;If&quot; condition:</li>
  <ul style='margin-top:0cm' type=square>
   <li class=MsoNormal>Condition:&nbsp;&quot;%details%&quot; != &quot;&quot;</li>
   <li class=MsoNormal>Inside If:</li>
   <ul style='margin-top:0cm' type=square>
    <li class=MsoNormal>Add a &quot;Set variable&quot; action:</li>
    <ul style='margin-top:0cm' type=square>
     <li class=MsoNormal>Variable name:&nbsp;logEntry.details</li>
     <li class=MsoNormal>Value:&nbsp;%details%</li>
    </ul>
   </ul>
  </ul>
  <li class=MsoNormal>Add another &quot;If&quot; condition:</li>
  <ul style='margin-top:0cm' type=square>
   <li class=MsoNormal>Condition:&nbsp;%verboseLogging% OR &quot;%level%&quot;
       = &quot;ERROR&quot; OR &quot;%level%&quot; = &quot;WARN&quot; OR &quot;%level%&quot;
       = &quot;INFO&quot;</li>
   <li class=MsoNormal>Inside If:</li>
   <ul style='margin-top:0cm' type=square>
    <li class=MsoNormal>Add an &quot;Append text to file&quot; action:</li>
    <ul style='margin-top:0cm' type=square>
     <li class=MsoNormal>File path:&nbsp;&quot;%logFilePath%&quot;</li>
     <li class=MsoNormal>Text to append:&nbsp;&quot;%logEntry TO
         JSON%\r\n&quot;</li>
    </ul>
   </ul>
  </ul>
 </ul>
 <li class=MsoNormal>Click &quot;Save&quot;</li>
</ol>

<p class=MsoNormal><b>10.2. VerifyAndSetValue Function</b></p>

<ol style='margin-top:0cm' start=1 type=1>
 <li class=MsoNormal>Click &quot;+&quot; to add a new function</li>
 <li class=MsoNormal>Set the function name to:&nbsp;VerifyAndSetValue</li>
 <li class=MsoNormal>Add parameters:</li>
 <ul style='margin-top:0cm' type=circle>
  <li class=MsoNormal>fieldName&nbsp;(Text)</li>
  <li class=MsoNormal>currentValue&nbsp;(Text)</li>
  <li class=MsoNormal>targetValue&nbsp;(Text)</li>
 </ul>
 <li class=MsoNormal>Inside the function:</li>
 <ul style='margin-top:0cm' type=circle>
  <li class=MsoNormal>Add an &quot;If&quot; condition:</li>
  <ul style='margin-top:0cm' type=square>
   <li class=MsoNormal>Condition:&nbsp;&quot;%currentValue%&quot; !=
       &quot;%targetValue%&quot;</li>
   <li class=MsoNormal>Inside If:</li>
   <ul style='margin-top:0cm' type=square>
    <li class=MsoNormal>Call the LogMessage function:</li>
    <ul style='margin-top:0cm' type=square>
     <li class=MsoNormal>level:&nbsp;&quot;DEBUG&quot;</li>
     <li class=MsoNormal>message:&nbsp;&quot;Changing %fieldName% from
         '%currentValue%' to '%targetValue%'&quot;</li>
     <li class=MsoNormal>details:&nbsp;&quot;&quot;</li>
    </ul>
    <li class=MsoNormal>Add a &quot;Return&quot; action:</li>
    <ul style='margin-top:0cm' type=square>
     <li class=MsoNormal>Return value:&nbsp;false</li>
    </ul>
   </ul>
   <li class=MsoNormal>Inside Else:</li>
   <ul style='margin-top:0cm' type=square>
    <li class=MsoNormal>Call the LogMessage function:</li>
    <ul style='margin-top:0cm' type=square>
     <li class=MsoNormal>level: `&quot;DEBUG</li>
    </ul>
   </ul>
  </ul>
 </ul>
</ol>

<p class=MsoNormal>Please provide the remaining information since I have saved
this part</p>

<p class=MsoNormal>PromptsClaude 3.7 Sonnet</p>

<p class=MsoNormal><b>Context&nbsp;none fetched</b></p>

<p class=MsoNormal><b>Continuing the Complete Step-by-Step Guide to Creating
the MT5 Backtest Flow Script</b></p>

<p class=MsoNormal>Let's continue from where we left off with creating the
helper functions:</p>

<p class=MsoNormal><b>10.2. VerifyAndSetValue Function (continued)</b></p>

<p class=MsoNormal>Inside the Else block:</p>

<ul style='margin-top:0cm' type=disc>
 <li class=MsoNormal>Call the LogMessage function:</li>
 <ul style='margin-top:0cm' type=circle>
  <li class=MsoNormal>level:&nbsp;&quot;DEBUG&quot;</li>
  <li class=MsoNormal>message:&nbsp;&quot;%fieldName% already set to
      '%targetValue%', skipping&quot;</li>
  <li class=MsoNormal>details:&nbsp;&quot;&quot;</li>
 </ul>
 <li class=MsoNormal>Add a &quot;Return&quot; action:</li>
 <ul style='margin-top:0cm' type=circle>
  <li class=MsoNormal>Return value:&nbsp;true</li>
 </ul>
 <li class=MsoNormal>Click &quot;Save&quot;</li>
</ul>

<p class=MsoNormal><b>10.3. LoadConfiguration Function</b></p>

<ol style='margin-top:0cm' start=1 type=1>
 <li class=MsoNormal>Click &quot;+&quot; to add a new function</li>
 <li class=MsoNormal>Set the function name to:&nbsp;LoadConfiguration</li>
 <li class=MsoNormal>Inside the function:</li>
 <ul style='margin-top:0cm' type=circle>
  <li class=MsoNormal>Add an &quot;If&quot; condition:</li>
  <ul style='margin-top:0cm' type=square>
   <li class=MsoNormal>Condition:&nbsp;FILE EXISTS &quot;%configFilePath%&quot;</li>
   <li class=MsoNormal>Inside If:</li>
   <ul style='margin-top:0cm' type=square>
    <li class=MsoNormal>Add a &quot;Try&quot; action (nested try/catch)</li>
    <li class=MsoNormal>Inside the nested Try:</li>
    <ul style='margin-top:0cm' type=square>
     <li class=MsoNormal>Call LogMessage:</li>
     <ul style='margin-top:0cm' type=square>
      <li class=MsoNormal>level:&nbsp;&quot;INFO&quot;</li>
      <li class=MsoNormal>message:&nbsp;&quot;Loading configuration from %configFilePath%&quot;</li>
      <li class=MsoNormal>details:&nbsp;&quot;&quot;</li>
     </ul>
     <li class=MsoNormal>Add a &quot;Read text from file&quot; action:</li>
     <ul style='margin-top:0cm' type=square>
      <li class=MsoNormal>File path:&nbsp;&quot;%configFilePath%&quot;</li>
      <li class=MsoNormal>Variable to store result:&nbsp;configData</li>
     </ul>
     <li class=MsoNormal>Add another nested &quot;Try&quot; for JSON parsing:</li>
     <ul style='margin-top:0cm' type=square>
      <li class=MsoNormal>Add a &quot;Parse JSON&quot; action:</li>
      <ul style='margin-top:0cm' type=square>
       <li class=MsoNormal>JSON text:&nbsp;&quot;%configData%&quot;</li>
       <li class=MsoNormal>Variable to store result:&nbsp;config</li>
      </ul>
      <li class=MsoNormal>Add multiple &quot;If&quot; conditions to check and
          set each configuration property:</li>
      <ul style='margin-top:0cm' type=square>
       <li class=MsoNormal>For each property in the config object, add an
           &quot;If&quot; condition:</li>
       <ul style='margin-top:0cm' type=square>
        <li class=MsoNormal>Condition:&nbsp;PROPERTY &quot;propertyName&quot;
            EXISTS IN config</li>
        <li class=MsoNormal>Inside If: Set the corresponding variable</li>
       </ul>
       <li class=MsoNormal>Repeat for all properties (mt5Path, eaPath,
           reportPath, etc.)</li>
      </ul>
      <li class=MsoNormal>Call LogMessage:</li>
      <ul style='margin-top:0cm' type=square>
       <li class=MsoNormal>level:&nbsp;&quot;INFO&quot;</li>
       <li class=MsoNormal>message:&nbsp;&quot;Configuration loaded
           successfully from JSON&quot;</li>
       <li class=MsoNormal>details:&nbsp;&quot;&quot;</li>
      </ul>
     </ul>
     <li class=MsoNormal>Add a &quot;Catch&quot; for the JSON parsing:</li>
     <ul style='margin-top:0cm' type=square>
      <li class=MsoNormal>Call LogMessage:</li>
      <ul style='margin-top:0cm' type=square>
       <li class=MsoNormal>level:&nbsp;&quot;WARN&quot;</li>
       <li class=MsoNormal>message:&nbsp;&quot;Failed to parse JSON config, falling
           back to text format&quot;</li>
       <li class=MsoNormal>details:&nbsp;&quot;&quot;</li>
      </ul>
      <li class=MsoNormal>Add text parsing logic for legacy format:</li>
      <ul style='margin-top:0cm' type=square>
       <li class=MsoNormal>Split the config data by line breaks</li>
       <li class=MsoNormal>Loop through each line</li>
       <li class=MsoNormal>Parse key-value pairs</li>
       <li class=MsoNormal>Set variables based on keys</li>
      </ul>
     </ul>
    </ul>
    <li class=MsoNormal>Add a &quot;Catch&quot; for the overall file reading:</li>
    <ul style='margin-top:0cm' type=square>
     <li class=MsoNormal>Call LogMessage:</li>
     <ul style='margin-top:0cm' type=square>
      <li class=MsoNormal>level:&nbsp;&quot;ERROR&quot;</li>
      <li class=MsoNormal>message:&nbsp;&quot;Error loading configuration:
          %ERROR MESSAGE%. Using default settings.&quot;</li>
      <li class=MsoNormal>details:&nbsp;&quot;&quot;</li>
     </ul>
    </ul>
   </ul>
   <li class=MsoNormal>Inside Else (if config file doesn't exist):</li>
   <ul style='margin-top:0cm' type=square>
    <li class=MsoNormal>Call LogMessage:</li>
    <ul style='margin-top:0cm' type=square>
     <li class=MsoNormal>level:&nbsp;&quot;INFO&quot;</li>
     <li class=MsoNormal>message:&nbsp;&quot;No configuration file found at
         %configFilePath%. Using default settings.&quot;</li>
     <li class=MsoNormal>details:&nbsp;&quot;&quot;</li>
    </ul>
   </ul>
  </ul>
 </ul>
 <li class=MsoNormal>Click &quot;Save&quot;</li>
</ol>

<p class=MsoNormal><b>10.4. AdaptiveWait Function</b></p>

<ol style='margin-top:0cm' start=1 type=1>
 <li class=MsoNormal>Click &quot;+&quot; to add a new function</li>
 <li class=MsoNormal>Set the function name to:&nbsp;AdaptiveWait</li>
 <li class=MsoNormal>Add parameters:</li>
 <ul style='margin-top:0cm' type=circle>
  <li class=MsoNormal>waitTime&nbsp;(Number)</li>
  <li class=MsoNormal>isRetry&nbsp;(Boolean)</li>
  <li class=MsoNormal>retryCount&nbsp;(Number)</li>
 </ul>
 <li class=MsoNormal>Inside the function:</li>
 <ul style='margin-top:0cm' type=circle>
  <li class=MsoNormal>Add an &quot;If&quot; condition:</li>
  <ul style='margin-top:0cm' type=square>
   <li class=MsoNormal>Condition:&nbsp;%isRetry%</li>
   <li class=MsoNormal>Inside If (for retries):</li>
   <ul style='margin-top:0cm' type=square>
    <li class=MsoNormal>Add &quot;Set variable&quot; actions to calculate
        backoff:</li>
    <ul style='margin-top:0cm' type=square>
     <li class=MsoNormal>backoffFactor&nbsp;=&nbsp;MIN(%maxRetryWaitTime% /
         %waitTime%, POWER(%retryBackoffMultiplier%, %retryCount%))</li>
     <li class=MsoNormal>adjustedWaitTime&nbsp;=&nbsp;%waitTime% *
         %backoffFactor%</li>
     <li class=MsoNormal>adjustedWaitTime&nbsp;=&nbsp;MIN(%adjustedWaitTime%,
         %maxRetryWaitTime%)</li>
    </ul>
   </ul>
   <li class=MsoNormal>Inside Else If:</li>
   <ul style='margin-top:0cm' type=square>
    <li class=MsoNormal>Condition:&nbsp;%adaptiveWaitEnabled%</li>
    <li class=MsoNormal>Inside this Else If:</li>
    <ul style='margin-top:0cm' type=square>
     <li class=MsoNormal>adjustedWaitTime&nbsp;=&nbsp;%waitTime% *
         %currentAdaptiveMultiplier%</li>
    </ul>
   </ul>
   <li class=MsoNormal>Inside final Else:</li>
   <ul style='margin-top:0cm' type=square>
    <li class=MsoNormal>adjustedWaitTime&nbsp;=&nbsp;%waitTime%</li>
   </ul>
  </ul>
  <li class=MsoNormal>Add another &quot;If&quot; condition for logging:</li>
  <ul style='margin-top:0cm' type=square>
   <li class=MsoNormal>Condition:&nbsp;%adjustedWaitTime% &gt; %waitTime% * 1.5
       AND %verboseLogging%</li>
   <li class=MsoNormal>Inside If:</li>
   <ul style='margin-top:0cm' type=square>
    <li class=MsoNormal>Call LogMessage:</li>
    <ul style='margin-top:0cm' type=square>
     <li class=MsoNormal>level:&nbsp;&quot;DEBUG&quot;</li>
     <li class=MsoNormal>message:&nbsp;&quot;Adjusted wait time from %waitTime%
         to %adjustedWaitTime% seconds&quot;</li>
     <li class=MsoNormal>details:&nbsp;&quot;&quot;</li>
    </ul>
   </ul>
  </ul>
  <li class=MsoNormal>Add a &quot;Wait&quot; action:</li>
  <ul style='margin-top:0cm' type=square>
   <li class=MsoNormal>Duration:&nbsp;%adjustedWaitTime%</li>
  </ul>
 </ul>
 <li class=MsoNormal>Click &quot;Save&quot;</li>
</ol>

<p class=MsoNormal><b>10.5. LegacyAdaptiveWait Function</b></p>

<ol style='margin-top:0cm' start=1 type=1>
 <li class=MsoNormal>Click &quot;+&quot; to add a new function</li>
 <li class=MsoNormal>Set the function name to:&nbsp;LegacyAdaptiveWait</li>
 <li class=MsoNormal>Add parameters:</li>
 <ul style='margin-top:0cm' type=circle>
  <li class=MsoNormal>waitTime&nbsp;(Number)</li>
 </ul>
 <li class=MsoNormal>Inside the function:</li>
 <ul style='margin-top:0cm' type=circle>
  <li class=MsoNormal>Call AdaptiveWait:</li>
  <ul style='margin-top:0cm' type=square>
   <li class=MsoNormal>waitTime:&nbsp;%waitTime%</li>
   <li class=MsoNormal>isRetry:&nbsp;false</li>
   <li class=MsoNormal>retryCount:&nbsp;0</li>
  </ul>
 </ul>
 <li class=MsoNormal>Click &quot;Save&quot;</li>
</ol>

<p class=MsoNormal><b>10.6. CaptureErrorState Function</b></p>

<ol style='margin-top:0cm' start=1 type=1>
 <li class=MsoNormal>Click &quot;+&quot; to add a new function</li>
 <li class=MsoNormal>Set the function name to:&nbsp;CaptureErrorState</li>
 <li class=MsoNormal>Add parameters:</li>
 <ul style='margin-top:0cm' type=circle>
  <li class=MsoNormal>errorContext&nbsp;(Text)</li>
 </ul>
 <li class=MsoNormal>Inside the function:</li>
 <ul style='margin-top:0cm' type=circle>
  <li class=MsoNormal>Add a &quot;Try&quot; action</li>
  <li class=MsoNormal>Inside Try:</li>
  <ul style='margin-top:0cm' type=square>
   <li class=MsoNormal>Format timestamp for filename</li>
   <li class=MsoNormal>Take screenshot</li>
   <li class=MsoNormal>Log screenshot details</li>
   <li class=MsoNormal>Check if Strategy Tester window exists and save partial
       results</li>
  </ul>
  <li class=MsoNormal>Inside Catch:</li>
  <ul style='margin-top:0cm' type=square>
   <li class=MsoNormal>Log error</li>
  </ul>
 </ul>
 <li class=MsoNormal>Click &quot;Save&quot;</li>
</ol>

<p class=MsoNormal><b>10.7. SaveCheckpoint Function</b></p>

<ol style='margin-top:0cm' start=1 type=1>
 <li class=MsoNormal>Click &quot;+&quot; to add a new function</li>
 <li class=MsoNormal>Set the function name to:&nbsp;SaveCheckpoint</li>
 <li class=MsoNormal>Inside the function:</li>
 <ul style='margin-top:0cm' type=circle>
  <li class=MsoNormal>Add a &quot;Try&quot; action</li>
  <li class=MsoNormal>Inside Try:</li>
  <ul style='margin-top:0cm' type=square>
   <li class=MsoNormal>Create checkpoint data object</li>
   <li class=MsoNormal>Write to checkpoint file</li>
   <li class=MsoNormal>Log success</li>
  </ul>
  <li class=MsoNormal>Inside Catch:</li>
  <ul style='margin-top:0cm' type=square>
   <li class=MsoNormal>Log error</li>
  </ul>
 </ul>
 <li class=MsoNormal>Click &quot;Save&quot;</li>
</ol>

<p class=MsoNormal><b>10.8. PerformMemoryCleanup Function</b></p>

<ol style='margin-top:0cm' start=1 type=1>
 <li class=MsoNormal>Click &quot;+&quot; to add a new function</li>
 <li class=MsoNormal>Set the function name to:&nbsp;PerformMemoryCleanup</li>
 <li class=MsoNormal>Inside the function:</li>
 <ul style='margin-top:0cm' type=circle>
  <li class=MsoNormal>Add an &quot;If&quot; condition to check memory threshold</li>
  <li class=MsoNormal>Inside If:</li>
  <ul style='margin-top:0cm' type=square>
   <li class=MsoNormal>Log warning</li>
   <li class=MsoNormal>Kill explorer.exe process</li>
   <li class=MsoNormal>Restart explorer.exe</li>
   <li class=MsoNormal>Check if cleanup helped</li>
   <li class=MsoNormal>Log results</li>
  </ul>
 </ul>
 <li class=MsoNormal>Click &quot;Save&quot;</li>
</ol>

<p class=MsoNormal><b>10.9. DetailedSystemCheck Function</b></p>

<ol style='margin-top:0cm' start=1 type=1>
 <li class=MsoNormal>Click &quot;+&quot; to add a new function</li>
 <li class=MsoNormal>Set the function name to:&nbsp;DetailedSystemCheck</li>
 <li class=MsoNormal>Inside the function:</li>
 <ul style='margin-top:0cm' type=circle>
  <li class=MsoNormal>Get current time</li>
  <li class=MsoNormal>Check if it's time to run a system check</li>
  <li class=MsoNormal>Get available memory</li>
  <li class=MsoNormal>Get CPU usage if memory is low</li>
  <li class=MsoNormal>Create system metrics object</li>
  <li class=MsoNormal>Log system status if needed</li>
  <li class=MsoNormal>Adjust wait multiplier based on system metrics</li>
  <li class=MsoNormal>Call memory cleanup if needed</li>
 </ul>
 <li class=MsoNormal>Click &quot;Save&quot;</li>
</ol>

<p class=MsoNormal><b>10.10. EstimateTestDuration Function</b></p>

<ol style='margin-top:0cm' start=1 type=1>
 <li class=MsoNormal>Click &quot;+&quot; to add a new function</li>
 <li class=MsoNormal>Set the function name to:&nbsp;EstimateTestDuration</li>
 <li class=MsoNormal>Add parameters:</li>
 <ul style='margin-top:0cm' type=circle>
  <li class=MsoNormal>currency&nbsp;(Text)</li>
  <li class=MsoNormal>timeframe&nbsp;(Text)</li>
  <li class=MsoNormal>eaName&nbsp;(Text)</li>
 </ul>
 <li class=MsoNormal>Inside the function:</li>
 <ul style='margin-top:0cm' type=circle>
  <li class=MsoNormal>Check if historical data exists for this combination</li>
  <li class=MsoNormal>Calculate estimated duration based on parameters</li>
  <li class=MsoNormal>Return the estimated duration</li>
 </ul>
 <li class=MsoNormal>Click &quot;Save&quot;</li>
</ol>

<p class=MsoNormal><b>10.11. UpdatePerformanceHistory Function</b></p>

<ol style='margin-top:0cm' start=1 type=1>
 <li class=MsoNormal>Click &quot;+&quot; to add a new function</li>
 <li class=MsoNormal>Set the function name to:&nbsp;UpdatePerformanceHistory</li>
 <li class=MsoNormal>Add parameters:</li>
 <ul style='margin-top:0cm' type=circle>
  <li class=MsoNormal>currency&nbsp;(Text)</li>
  <li class=MsoNormal>timeframe&nbsp;(Text)</li>
  <li class=MsoNormal>eaName&nbsp;(Text)</li>
  <li class=MsoNormal>actualDuration&nbsp;(Number)</li>
 </ul>
 <li class=MsoNormal>Inside the function:</li>
 <ul style='margin-top:0cm' type=circle>
  <li class=MsoNormal>Create key for this combination</li>
  <li class=MsoNormal>Update or add the entry in performance history</li>
  <li class=MsoNormal>Save to file</li>
  <li class=MsoNormal>Log update</li>
 </ul>
 <li class=MsoNormal>Click &quot;Save&quot;</li>
</ol>

<p class=MsoNormal><b>10.12. UI Interaction Helper Functions</b></p>

<p class=MsoNormal>Create these UI interaction helper functions:</p>

<ol style='margin-top:0cm' start=1 type=1>
 <li class=MsoNormal>NavigateToField&nbsp;- Tabs to a specific field position</li>
 <li class=MsoNormal>EnterValue&nbsp;- Enters a value in the current field</li>
 <li class=MsoNormal>SelectDropdownItem&nbsp;- Selects an item from a dropdown</li>
 <li class=MsoNormal>ConfigureField&nbsp;- Configures a field with retry logic</li>
 <li class=MsoNormal>ConfigureDropdownField&nbsp;- Configures a dropdown field
     with retry logic</li>
 <li class=MsoNormal>OptimizeMT5ForBacktesting&nbsp;- Optimizes MT5 settings</li>
 <li class=MsoNormal>SaveCurrentSettings&nbsp;- Saves Strategy Tester settings</li>
 <li class=MsoNormal>LoadSettings&nbsp;- Loads saved Strategy Tester settings</li>
</ol>

<p class=MsoNormal><b>Step 11: Define Lists for Timeframes and Currencies</b></p>

<ol style='margin-top:0cm' start=1 type=1>
 <li class=MsoNormal>Create the timeframes list:</li>
 <ul style='margin-top:0cm' type=circle>
  <li class=MsoNormal>Click &quot;+&quot; after all functions</li>
  <li class=MsoNormal>Search for &quot;Create list&quot; and select it</li>
  <li class=MsoNormal>Set the variable name to:&nbsp;timeframes</li>
  <li class=MsoNormal>Click &quot;Save&quot;</li>
 </ul>
 <li class=MsoNormal>Add all timeframes to the list:</li>
 <ul style='margin-top:0cm' type=circle>
  <li class=MsoNormal>For each timeframe (M1, M2, M3, etc.), add an &quot;Add
      item to list&quot; action:</li>
  <ul style='margin-top:0cm' type=square>
   <li class=MsoNormal>List variable:&nbsp;timeframes</li>
   <li class=MsoNormal>Item to add:&nbsp;&quot;M1&quot;&nbsp;(then M2, M3,
       etc.)</li>
  </ul>
  <li class=MsoNormal>Repeat for all 21 timeframes</li>
 </ul>
 <li class=MsoNormal>Create the currencies list:</li>
 <ul style='margin-top:0cm' type=circle>
  <li class=MsoNormal>Add a &quot;Create list&quot; action</li>
  <li class=MsoNormal>Set the variable name to:&nbsp;currencies</li>
  <li class=MsoNormal>Click &quot;Save&quot;</li>
 </ul>
 <li class=MsoNormal>Add all currency pairs to the list:</li>
 <ul style='margin-top:0cm' type=circle>
  <li class=MsoNormal>For each currency pair, add an &quot;Add item to
      list&quot; action:</li>
  <ul style='margin-top:0cm' type=square>
   <li class=MsoNormal>List variable:&nbsp;currencies</li>
   <li class=MsoNormal>Item to add:&nbsp;&quot;EURUSD&quot;&nbsp;(then GBPUSD,
       etc.)</li>
  </ul>
  <li class=MsoNormal>Repeat for all currency pairs</li>
 </ul>
</ol>

<p class=MsoNormal><b>Step 12: Get List of EAs</b></p>

<ol style='margin-top:0cm' start=1 type=1>
 <li class=MsoNormal>Create the EA list:</li>
 <ul style='margin-top:0cm' type=circle>
  <li class=MsoNormal>Add a &quot;Create list&quot; action</li>
  <li class=MsoNormal>Set the variable name to:&nbsp;eaList</li>
  <li class=MsoNormal>Click &quot;Save&quot;</li>
 </ul>
 <li class=MsoNormal>Add a &quot;Try&quot; action to get EA files:</li>
 <ul style='margin-top:0cm' type=circle>
  <li class=MsoNormal>Inside Try:</li>
  <ul style='margin-top:0cm' type=square>
   <li class=MsoNormal>Add a &quot;Get files in folder&quot; action:</li>
   <ul style='margin-top:0cm' type=square>
    <li class=MsoNormal>Folder path:&nbsp;&quot;%eaPath%&quot;</li>
    <li class=MsoNormal>File pattern:&nbsp;&quot;*.ex5&quot;</li>
    <li class=MsoNormal>Recursive:&nbsp;No</li>
    <li class=MsoNormal>Variable to store result:&nbsp;eaList</li>
   </ul>
   <li class=MsoNormal>Add an &quot;If&quot; condition to check if any EAs were
       found:</li>
   <ul style='margin-top:0cm' type=square>
    <li class=MsoNormal>Condition:&nbsp;COUNT OF LIST eaList = 0</li>
    <li class=MsoNormal>Inside If:</li>
    <ul style='margin-top:0cm' type=square>
     <li class=MsoNormal>Add an &quot;Add item to list&quot; action:</li>
     <ul style='margin-top:0cm' type=square>
      <li class=MsoNormal>List variable:&nbsp;eaList</li>
      <li class=MsoNormal>Item to add:&nbsp;&quot;Moving Average&quot;</li>
     </ul>
     <li class=MsoNormal>Call LogMessage to warn about no EAs found</li>
    </ul>
    <li class=MsoNormal>Inside Else:</li>
    <ul style='margin-top:0cm' type=square>
     <li class=MsoNormal>Log found EAs</li>
    </ul>
   </ul>
  </ul>
  <li class=MsoNormal>Inside Catch:</li>
  <ul style='margin-top:0cm' type=square>
   <li class=MsoNormal>Log error</li>
   <li class=MsoNormal>Add default EA to prevent errors</li>
  </ul>
 </ul>
</ol>

<p class=MsoNormal><b>Step 13: Load Configuration and Check for Checkpoint</b></p>

<ol style='margin-top:0cm' start=1 type=1>
 <li class=MsoNormal>Call the LoadConfiguration function</li>
 <li class=MsoNormal>Add an &quot;If&quot; condition to check for checkpoint
     file:</li>
 <ul style='margin-top:0cm' type=circle>
  <li class=MsoNormal>Condition:&nbsp;FILE EXISTS &quot;%checkpointFile%&quot;</li>
  <li class=MsoNormal>Inside If:</li>
  <ul style='margin-top:0cm' type=square>
   <li class=MsoNormal>Add a &quot;Try&quot; action</li>
   <li class=MsoNormal>Inside Try:</li>
   <ul style='margin-top:0cm' type=square>
    <li class=MsoNormal>Read checkpoint file</li>
    <li class=MsoNormal>Parse checkpoint data</li>
    <li class=MsoNormal>Set variables from checkpoint</li>
    <li class=MsoNormal>Set&nbsp;resumeFromCheckpoint&nbsp;to&nbsp;true</li>
    <li class=MsoNormal>Log resuming from checkpoint</li>
   </ul>
   <li class=MsoNormal>Inside Catch:</li>
   <ul style='margin-top:0cm' type=square>
    <li class=MsoNormal>Log error</li>
    <li class=MsoNormal>Set&nbsp;resumeFromCheckpoint&nbsp;to&nbsp;false</li>
   </ul>
  </ul>
 </ul>
</ol>

<p class=MsoNormal><b>Step 14: Initial System Check and Launch MT5</b></p>

<ol style='margin-top:0cm' start=1 type=1>
 <li class=MsoNormal>Call the DetailedSystemCheck function</li>
 <li class=MsoNormal>Add a &quot;Set variable&quot; action:</li>
 <ul style='margin-top:0cm' type=circle>
  <li class=MsoNormal>Variable name:&nbsp;retryCount</li>
  <li class=MsoNormal>Value:&nbsp;0</li>
 </ul>
 <li class=MsoNormal>Add a &quot;While&quot; loop for MT5 launch retries:</li>
 <ul style='margin-top:0cm' type=circle>
  <li class=MsoNormal>Condition:&nbsp;%retryCount% &lt; %maxRetries%</li>
  <li class=MsoNormal>Inside While:</li>
  <ul style='margin-top:0cm' type=square>
   <li class=MsoNormal>Add a &quot;Try&quot; action</li>
   <li class=MsoNormal>Inside Try:</li>
   <ul style='margin-top:0cm' type=square>
    <li class=MsoNormal>Log MT5 launch attempt</li>
    <li class=MsoNormal>Run MT5 program</li>
    <li class=MsoNormal>Wait for MT5 to load</li>
    <li class=MsoNormal>Check if MT5 window exists</li>
    <li class=MsoNormal>Log success</li>
    <li class=MsoNormal>Call OptimizeMT5ForBacktesting</li>
    <li class=MsoNormal>Configure MT5 to use unlimited bars</li>
    <li class=MsoNormal>Break out of loop</li>
   </ul>
   <li class=MsoNormal>Inside Catch:</li>
   <ul style='margin-top:0cm' type=square>
    <li class=MsoNormal>Increment retry counter</li>
    <li class=MsoNormal>Log error</li>
    <li class=MsoNormal>Capture error state</li>
    <li class=MsoNormal>Check if max retries reached</li>
    <li class=MsoNormal>Wait before retrying</li>
   </ul>
  </ul>
 </ul>
</ol>

<p class=MsoNormal><b>Step 15: Create Templates Directory</b></p>

<p class=MsoNormal>Add an &quot;If&quot; condition to check if templates
directory exists:</p>

<ul style='margin-top:0cm' type=disc>
 <li class=MsoNormal>Condition:&nbsp;FOLDER NOT EXISTS
     &quot;%reportPath%\templates&quot;</li>
 <li class=MsoNormal>Inside If:</li>
 <ul style='margin-top:0cm' type=circle>
  <li class=MsoNormal>Create the templates folder</li>
 </ul>
</ul>

<p class=MsoNormal><b>Step 16: Main Nested Loops for Testing</b></p>

<ol style='margin-top:0cm' start=1 type=1>
 <li class=MsoNormal>Add a &quot;For each&quot; loop for EAs:</li>
 <ul style='margin-top:0cm' type=circle>
  <li class=MsoNormal>List variable:&nbsp;eaList</li>
  <li class=MsoNormal>Loop variable:&nbsp;eaFile</li>
  <li class=MsoNormal>Index variable:&nbsp;eaIndex</li>
  <li class=MsoNormal>Inside loop:</li>
  <ul style='margin-top:0cm' type=square>
   <li class=MsoNormal>Check if should skip to checkpoint position</li>
   <li class=MsoNormal>Extract EA name</li>
   <li class=MsoNormal>Log starting tests for this EA</li>
  </ul>
 </ul>
 <li class=MsoNormal>Inside the EA loop, add a &quot;For each&quot; loop for
     currencies:</li>
 <ul style='margin-top:0cm' type=circle>
  <li class=MsoNormal>List variable:&nbsp;currencies</li>
  <li class=MsoNormal>Loop variable:&nbsp;currency</li>
  <li class=MsoNormal>Index variable:&nbsp;currencyIndex</li>
  <li class=MsoNormal>Inside loop:</li>
  <ul style='margin-top:0cm' type=square>
   <li class=MsoNormal>Check if should skip to checkpoint position</li>
   <li class=MsoNormal>Add a &quot;Try&quot; action</li>
   <li class=MsoNormal>Inside Try:</li>
   <ul style='margin-top:0cm' type=square>
    <li class=MsoNormal>Log starting tests for this currency</li>
    <li class=MsoNormal>Check system resources</li>
    <li class=MsoNormal>Open Strategy Tester with retry logic</li>
    <li class=MsoNormal>Configure Strategy Tester</li>
    <li class=MsoNormal>Save settings</li>
   </ul>
  </ul>
 </ul>
 <li class=MsoNormal>Inside the currency loop, add a &quot;For each&quot; loop
     for timeframes:</li>
 <ul style='margin-top:0cm' type=circle>
  <li class=MsoNormal>List variable:&nbsp;timeframes</li>
  <li class=MsoNormal>Loop variable:&nbsp;timeframe</li>
  <li class=MsoNormal>Index variable:&nbsp;timeframeIndex</li>
  <li class=MsoNormal>Inside loop:</li>
  <ul style='margin-top:0cm' type=square>
   <li class=MsoNormal>Check if should skip to checkpoint position</li>
   <li class=MsoNormal>Add a &quot;Try&quot; action</li>
   <li class=MsoNormal>Inside Try:</li>
   <ul style='margin-top:0cm' type=square>
    <li class=MsoNormal>Log setting timeframe</li>
    <li class=MsoNormal>Check system resources</li>
    <li class=MsoNormal>Load saved settings</li>
    <li class=MsoNormal>Configure timeframe</li>
    <li class=MsoNormal>Save settings</li>
    <li class=MsoNormal>Estimate test duration</li>
    <li class=MsoNormal>Save checkpoint</li>
    <li class=MsoNormal>Start test</li>
    <li class=MsoNormal>Wait for test to complete with progress monitoring</li>
    <li class=MsoNormal>Record actual test duration</li>
    <li class=MsoNormal>Save report</li>
    <li class=MsoNormal>Check if need to restart MT5</li>
   </ul>
   <li class=MsoNormal>Inside Catch:</li>
   <ul style='margin-top:0cm' type=square>
    <li class=MsoNormal>Log error</li>
    <li class=MsoNormal>Capture error state</li>
    <li class=MsoNormal>Increment consecutive failures</li>
    <li class=MsoNormal>Check if need to restart MT5</li>
   </ul>
  </ul>
 </ul>
</ol>

<p class=MsoNormal><b>Step 17: Cleanup After All Tests</b></p>

<ol style='margin-top:0cm' start=1 type=1>
 <li class=MsoNormal>Add a &quot;Try&quot; action after all loops</li>
 <li class=MsoNormal>Inside Try:</li>
 <ul style='margin-top:0cm' type=circle>
  <li class=MsoNormal>Close MT5</li>
  <li class=MsoNormal>Handle &quot;Save changes&quot; dialog</li>
  <li class=MsoNormal>Remove checkpoint file</li>
  <li class=MsoNormal>Generate summary report</li>
  <li class=MsoNormal>Log completion</li>
  <li class=MsoNormal>Display completion message</li>
 </ul>
 <li class=MsoNormal>Inside Catch:</li>
 <ul style='margin-top:0cm' type=circle>
  <li class=MsoNormal>Log error</li>
  <li class=MsoNormal>Display completion message with warning</li>
 </ul>
</ol>

<p class=MsoNormal><b>Step 18: Save and Test the Flow</b></p>

<ol style='margin-top:0cm' start=1 type=1>
 <li class=MsoNormal>Click the &quot;Save&quot; button at the top of the screen
     to save your flow</li>
 <li class=MsoNormal>Click the &quot;Run&quot; button to test your flow:</li>
 <ul style='margin-top:0cm' type=circle>
  <li class=MsoNormal>Start with a small subset of data (few EAs, currencies,
      timeframes)</li>
  <li class=MsoNormal>Monitor the execution</li>
  <li class=MsoNormal>Check logs for errors</li>
  <li class=MsoNormal>Adjust wait times and error handling as needed</li>
 </ul>
</ol>

<p class=MsoNormal><b>Step 19: Make Adjustments and Finalize</b></p>

<ol style='margin-top:0cm' start=1 type=1>
 <li class=MsoNormal>Review the flow execution results</li>
 <li class=MsoNormal>Make any necessary adjustments to:</li>
 <ul style='margin-top:0cm' type=circle>
  <li class=MsoNormal>Wait times</li>
  <li class=MsoNormal>Error handling</li>
  <li class=MsoNormal>UI interaction logic</li>
 </ul>
 <li class=MsoNormal>Save the final version of your flow</li>
</ol>

<p class=MsoNormal><b>Important Tips for Success</b></p>

<ol style='margin-top:0cm' start=1 type=1>
 <li class=MsoNormal><b>Test in Stages</b>: Don't try to run the entire flow at
     once. Test each function and section separately.</li>
 <li class=MsoNormal><b>Customize Paths</b>: Update the paths in the
     defaultConfig to match your system.</li>
 <li class=MsoNormal><b>UI Interaction</b>: The most challenging part is UI
     interaction. Make sure your MT5 window is visible and accessible.</li>
 <li class=MsoNormal><b>Error Handling</b>: This script has robust error
     handling. Don't skip implementing the try/catch blocks.</li>
 <li class=MsoNormal><b>System Resources</b>: For long runs, the system
     resource monitoring is crucial. Implement it carefully.</li>
 <li class=MsoNormal><b>Checkpoints</b>: The checkpoint system allows resuming
     long runs. Test it by intentionally stopping the flow.</li>
 <li class=MsoNormal><b>Logging</b>: Implement all logging to help troubleshoot
     issues.</li>
 <li class=MsoNormal><b>Adaptive Waits</b>: The adaptive wait system helps
     handle varying system loads. Implement it as shown.</li>
</ol>

<p class=MsoNormal>This completes the step-by-step guide for implementing the
entire MT5 Backtest Flow script in Power Automate Desktop. Take your time with
each step, and don't hesitate to test sections as you build them.</p>

</div>

</body>

</html>
